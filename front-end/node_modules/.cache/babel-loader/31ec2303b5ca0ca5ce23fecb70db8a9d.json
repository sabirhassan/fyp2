{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\test1\\\\front-end\\\\src\\\\components\\\\component-medicines.js\";\nimport React, { Component } from 'react';\nimport { Datatable } from \"@o2xp/react-datatable\";\nimport axios from 'axios';\nimport DatePicker from 'react-date-picker';\nimport { FreeBreakfast as CoffeeIcon, CallSplit as CallSplitIcon } from \"@material-ui/icons\";\nimport { chunk } from \"lodash\";\nconst options = {\n  title: \"My super datatable\",\n  dimensions: {\n    datatable: {\n      width: \"90%\",\n      height: \"40%\"\n    },\n    row: {\n      height: \"48px\"\n    }\n  },\n  keyColumn: \"id\",\n  font: \"Arial\",\n  data: {\n    columns: [{\n      id: \"id\",\n      label: \"id\",\n      colSize: \"150px\",\n      editable: false\n    }, {\n      id: \"Drug Name\",\n      label: \"Name\",\n      colSize: \"100px\",\n      editable: true,\n      dataType: \"text\",\n      inputType: \"input\"\n    }, {\n      id: \"Form\",\n      label: \"Form\",\n      colSize: \"100px\",\n      editable: true,\n      dataType: \"text\",\n      inputType: \"input\"\n    }, {\n      id: \"Strength\",\n      label: \"Strength\",\n      colSize: \"100px\",\n      editable: true,\n      dataType: \"text\",\n      inputType: \"input\"\n    }, {\n      id: \"Active Ingredient\",\n      label: \"Active Ingredient\",\n      colSize: \"100px\",\n      editable: true,\n      dataType: \"text\",\n      inputType: \"input\"\n    }],\n    rows: [{\n      'id': \"50cf\",\n      'Drug Name': \"Kerr Mayo\",\n      'Form': 'true',\n      'Strength': \"1972-09-04T11:09:59\",\n      'Active Ingredient': \"green\"\n    }, {\n      'id': \"50cf\",\n      'Drug Name': \"Kerr Mayo\",\n      'Form': 'true',\n      'Strength': \"1972-09-04T11:09:59\",\n      'Active Ingredient': \"green\"\n    }, {\n      'id': \"50cf\",\n      'Drug Name': \"Kerr Mayo\",\n      'Form': 'true',\n      'Strength': \"1972-09-04T11:09:59\",\n      'Active Ingredient': \"green\"\n    }]\n  },\n  features: {\n    canEdit: true,\n    canDelete: true,\n    canSearch: true,\n    canOrderColumns: true,\n    canSelectRow: true,\n    rowsPerPage: {\n      available: [10, 25, 50, 100],\n      selected: 50\n    },\n    additionalIcons: [],\n    selectionIcons: [{\n      title: \"Selected Rows\",\n      icon: React.createElement(CallSplitIcon, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }),\n      onClick: rows => console.log(rows)\n    }]\n  }\n};\nexport default class medicineList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.actionsRow = ({\n      type,\n      payload\n    }) => {\n      console.log(type);\n      console.log(payload);\n    };\n\n    this.refreshRows = () => {\n      const {\n        rows\n      } = options.data;\n      const randomRows = Math.floor(Math.random() * rows.length) + 1;\n      const randomTime = Math.floor(Math.random() * 4000) + 1000;\n      const randomResolve = Math.floor(Math.random() * 10) + 1;\n      return new Promise((resolve, reject) => {\n        setTimeout(() => {\n          if (randomResolve > 3) {\n            resolve(chunk(rows, randomRows)[0]);\n          }\n\n          reject(new Error(\"err\"));\n        }, randomTime);\n      });\n    };\n\n    this.state = {};\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        marginTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Medicine List\"), React.createElement(Datatable, {\n      options: options,\n      refreshRows: this.refreshRows,\n      actions: this.actionsRow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/test1/front-end/src/components/component-medicines.js"],"names":["React","Component","Datatable","axios","DatePicker","FreeBreakfast","CoffeeIcon","CallSplit","CallSplitIcon","chunk","options","title","dimensions","datatable","width","height","row","keyColumn","font","data","columns","id","label","colSize","editable","dataType","inputType","rows","features","canEdit","canDelete","canSearch","canOrderColumns","canSelectRow","rowsPerPage","available","selected","additionalIcons","selectionIcons","icon","onClick","console","log","medicineList","constructor","props","actionsRow","type","payload","refreshRows","randomRows","Math","floor","random","length","randomTime","randomResolve","Promise","resolve","reject","setTimeout","Error","state","render","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {Datatable} from \"@o2xp/react-datatable\";\r\nimport axios from 'axios';\r\nimport DatePicker from 'react-date-picker';\r\nimport {\r\n    FreeBreakfast as CoffeeIcon,\r\n    CallSplit as CallSplitIcon\r\n  } from \"@material-ui/icons\";\r\n  import { chunk } from \"lodash\";\r\n\r\nconst options = {\r\n    title: \"My super datatable\",\r\n    dimensions: {\r\n      datatable: {\r\n        width: \"90%\",\r\n        height: \"40%\"\r\n      },\r\n      row: {\r\n        height: \"48px\"\r\n      }\r\n    },\r\n    keyColumn: \"id\",\r\n    font: \"Arial\",\r\n    data: {\r\n      columns: [\r\n        {\r\n            id: \"id\",\r\n            label: \"id\",\r\n            colSize: \"150px\",\r\n            editable: false\r\n        },\r\n        {\r\n            id: \"Drug Name\",\r\n            label: \"Name\",\r\n            colSize: \"100px\",\r\n            editable: true,\r\n            dataType: \"text\",\r\n            inputType: \"input\"\r\n        },\r\n        {\r\n            id: \"Form\",\r\n            label: \"Form\",\r\n            colSize: \"100px\",\r\n            editable: true,\r\n            dataType: \"text\",\r\n            inputType: \"input\"\r\n        },\r\n        {\r\n            id: \"Strength\",\r\n            label: \"Strength\",\r\n            colSize: \"100px\",\r\n            editable: true,\r\n            dataType: \"text\",\r\n            inputType: \"input\"\r\n        },\r\n        {\r\n            id: \"Active Ingredient\",\r\n            label: \"Active Ingredient\",\r\n            colSize: \"100px\",\r\n            editable: true,\r\n            dataType: \"text\",\r\n            inputType: \"input\"\r\n        },\r\n      \r\n        ],\r\n\r\n      rows: [\r\n        {\r\n            'id': \"50cf\",\r\n            'Drug Name': \"Kerr Mayo\",\r\n            'Form': 'true',\r\n            'Strength': \"1972-09-04T11:09:59\",\r\n            'Active Ingredient': \"green\",\r\n        },\r\n        {\r\n            'id': \"50cf\",\r\n            'Drug Name': \"Kerr Mayo\",\r\n            'Form': 'true',\r\n            'Strength': \"1972-09-04T11:09:59\",\r\n            'Active Ingredient': \"green\",\r\n        },\r\n        {\r\n            'id': \"50cf\",\r\n            'Drug Name': \"Kerr Mayo\",\r\n            'Form': 'true',\r\n            'Strength': \"1972-09-04T11:09:59\",\r\n            'Active Ingredient': \"green\",\r\n        }\r\n      ]\r\n    },\r\n    features: {\r\n      canEdit: true,\r\n      canDelete: true,\r\n      canSearch: true,\r\n      canOrderColumns: true,\r\n      canSelectRow: true,\r\n      rowsPerPage: {\r\n        available: [10, 25, 50, 100],\r\n        selected: 50\r\n      },\r\n      additionalIcons: [\r\n        \r\n      ],\r\n      selectionIcons: [\r\n        {\r\n          title: \"Selected Rows\",\r\n          icon: <CallSplitIcon color=\"primary\" />,\r\n          onClick: rows => console.log(rows)\r\n        }\r\n      ]\r\n    }\r\n  };\r\n\r\n\r\nexport default class medicineList extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        }\r\n\r\n    }\r\n    \r\n            actionsRow = ({ type, payload }) => {\r\n            console.log(type);\r\n            console.log(payload);\r\n          };\r\n        \r\n          refreshRows = () => {\r\n            const { rows } = options.data;\r\n            const randomRows = Math.floor(Math.random() * rows.length) + 1;\r\n            const randomTime = Math.floor(Math.random() * 4000) + 1000;\r\n            const randomResolve = Math.floor(Math.random() * 10) + 1;\r\n            return new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                if (randomResolve > 3) {\r\n                  resolve(chunk(rows, randomRows)[0]);\r\n                }\r\n                reject(new Error(\"err\"));\r\n              }, randomTime);\r\n            });\r\n          };\r\n\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div style={{marginTop: 10}}>\r\n                <h3>Medicine List</h3>\r\n                \r\n                <Datatable\r\n                options={options}\r\n                refreshRows={this.refreshRows}\r\n                actions={this.actionsRow}\r\n              />\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}