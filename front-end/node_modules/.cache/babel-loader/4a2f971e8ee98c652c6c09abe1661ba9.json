{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.focusEvents = exports.keyboardEvents = exports.touchEvents = exports.mouseEvents = void 0; // As defined on the list of supported mouse events: https://reactjs.org/docs/events.html#mouse-events\n\nvar mouseEvents = ['onClick', 'onContextMenu', 'onDoubleClick', 'onDrag', 'onDragEnd', 'onDragEnter', 'onDragExit', 'onDragLeave', 'onDragOver', 'onDragStart', 'onDrop', 'onMouseDown', 'onMouseEnter', 'onMouseLeave', 'onMouseMove', 'onMouseOut', 'onMouseOver', 'onMouseUp']; // As defined on the list of supported touch events: https://reactjs.org/docs/events.html#touch-events\n\nexports.mouseEvents = mouseEvents;\nvar touchEvents = ['onTouchCancel', 'onTouchEnd', 'onTouchMove', 'onTouchStart']; // As defined on the list of supported keyboard events: https://reactjs.org/docs/events.html#keyboard-events\n\nexports.touchEvents = touchEvents;\nvar keyboardEvents = ['onKeyDown', 'onKeyPress', 'onKeyUp']; // As defined on the list of supported keyboard events: https://reactjs.org/docs/events.html#focus-events\n\nexports.keyboardEvents = keyboardEvents;\nvar focusEvents = ['onFocus', 'onBlur'];\n/**\r\n * Returns an object with on-event callback props curried with provided args.\r\n * @param {Object} props Props passed to a component.\r\n * @param {Function=} getArgs A function that returns argument(s) on-event callbacks\r\n *   shall be curried with.\r\n */\n\nexports.focusEvents = focusEvents;\n\nvar makeEventProps = function makeEventProps(props, getArgs) {\n  var eventProps = {};\n  [].concat(mouseEvents, touchEvents, keyboardEvents, focusEvents).forEach(function (eventName) {\n    if (props[eventName]) {\n      eventProps[eventName] = function (event) {\n        return getArgs ? props[eventName](event, getArgs(eventName)) : props[eventName](event);\n      };\n    }\n  });\n  return eventProps;\n};\n\nvar _default = makeEventProps;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/salahudin/Desktop/FYP-Version-Controlled/fyp2/front-end/node_modules/make-event-props/dist/entry.js"],"names":["Object","defineProperty","exports","value","default","focusEvents","keyboardEvents","touchEvents","mouseEvents","makeEventProps","props","getArgs","eventProps","concat","forEach","eventName","event","_default"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBF,OAAO,CAACG,WAAR,GAAsBH,OAAO,CAACI,cAAR,GAAyBJ,OAAO,CAACK,WAAR,GAAsBL,OAAO,CAACM,WAAR,GAAsB,KAAK,CAAlH,C,CACA;;AACA,IAAIA,WAAW,GAAG,CAAC,SAAD,EAAY,eAAZ,EAA6B,eAA7B,EAA8C,QAA9C,EAAwD,WAAxD,EAAqE,aAArE,EAAoF,YAApF,EAAkG,aAAlG,EAAiH,YAAjH,EAA+H,aAA/H,EAA8I,QAA9I,EAAwJ,aAAxJ,EAAuK,cAAvK,EAAuL,cAAvL,EAAuM,aAAvM,EAAsN,YAAtN,EAAoO,aAApO,EAAmP,WAAnP,CAAlB,C,CAAmR;;AAEnRN,OAAO,CAACM,WAAR,GAAsBA,WAAtB;AACA,IAAID,WAAW,GAAG,CAAC,eAAD,EAAkB,YAAlB,EAAgC,aAAhC,EAA+C,cAA/C,CAAlB,C,CAAkF;;AAElFL,OAAO,CAACK,WAAR,GAAsBA,WAAtB;AACA,IAAID,cAAc,GAAG,CAAC,WAAD,EAAc,YAAd,EAA4B,SAA5B,CAArB,C,CAA6D;;AAE7DJ,OAAO,CAACI,cAAR,GAAyBA,cAAzB;AACA,IAAID,WAAW,GAAG,CAAC,SAAD,EAAY,QAAZ,CAAlB;AACA;;;;;;;AAOAH,OAAO,CAACG,WAAR,GAAsBA,WAAtB;;AAEA,IAAII,cAAc,GAAG,SAASA,cAAT,CAAwBC,KAAxB,EAA+BC,OAA/B,EAAwC;AAC3D,MAAIC,UAAU,GAAG,EAAjB;AACA,KAAGC,MAAH,CAAUL,WAAV,EAAuBD,WAAvB,EAAoCD,cAApC,EAAoDD,WAApD,EAAiES,OAAjE,CAAyE,UAAUC,SAAV,EAAqB;AAC5F,QAAIL,KAAK,CAACK,SAAD,CAAT,EAAsB;AACpBH,MAAAA,UAAU,CAACG,SAAD,CAAV,GAAwB,UAAUC,KAAV,EAAiB;AACvC,eAAOL,OAAO,GAAGD,KAAK,CAACK,SAAD,CAAL,CAAiBC,KAAjB,EAAwBL,OAAO,CAACI,SAAD,CAA/B,CAAH,GAAiDL,KAAK,CAACK,SAAD,CAAL,CAAiBC,KAAjB,CAA/D;AACD,OAFD;AAGD;AACF,GAND;AAOA,SAAOJ,UAAP;AACD,CAVD;;AAYA,IAAIK,QAAQ,GAAGR,cAAf;AACAP,OAAO,CAACE,OAAR,GAAkBa,QAAlB","sourcesContent":["\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = exports.focusEvents = exports.keyboardEvents = exports.touchEvents = exports.mouseEvents = void 0;\r\n// As defined on the list of supported mouse events: https://reactjs.org/docs/events.html#mouse-events\r\nvar mouseEvents = ['onClick', 'onContextMenu', 'onDoubleClick', 'onDrag', 'onDragEnd', 'onDragEnter', 'onDragExit', 'onDragLeave', 'onDragOver', 'onDragStart', 'onDrop', 'onMouseDown', 'onMouseEnter', 'onMouseLeave', 'onMouseMove', 'onMouseOut', 'onMouseOver', 'onMouseUp']; // As defined on the list of supported touch events: https://reactjs.org/docs/events.html#touch-events\r\n\r\nexports.mouseEvents = mouseEvents;\r\nvar touchEvents = ['onTouchCancel', 'onTouchEnd', 'onTouchMove', 'onTouchStart']; // As defined on the list of supported keyboard events: https://reactjs.org/docs/events.html#keyboard-events\r\n\r\nexports.touchEvents = touchEvents;\r\nvar keyboardEvents = ['onKeyDown', 'onKeyPress', 'onKeyUp']; // As defined on the list of supported keyboard events: https://reactjs.org/docs/events.html#focus-events\r\n\r\nexports.keyboardEvents = keyboardEvents;\r\nvar focusEvents = ['onFocus', 'onBlur'];\r\n/**\r\n * Returns an object with on-event callback props curried with provided args.\r\n * @param {Object} props Props passed to a component.\r\n * @param {Function=} getArgs A function that returns argument(s) on-event callbacks\r\n *   shall be curried with.\r\n */\r\n\r\nexports.focusEvents = focusEvents;\r\n\r\nvar makeEventProps = function makeEventProps(props, getArgs) {\r\n  var eventProps = {};\r\n  [].concat(mouseEvents, touchEvents, keyboardEvents, focusEvents).forEach(function (eventName) {\r\n    if (props[eventName]) {\r\n      eventProps[eventName] = function (event) {\r\n        return getArgs ? props[eventName](event, getArgs(eventName)) : props[eventName](event);\r\n      };\r\n    }\r\n  });\r\n  return eventProps;\r\n};\r\n\r\nvar _default = makeEventProps;\r\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}