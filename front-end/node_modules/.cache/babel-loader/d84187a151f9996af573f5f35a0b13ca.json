{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\test1\\\\front-end\\\\src\\\\components\\\\component-report.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport Table from 'react-bootstrap/Table';\nimport '../css/medicine.css';\nexport default class reportList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.closePop = () => {\n      console.log(\"toggle pop\");\n      this.setState({\n        seen: false,\n        selecteditem: -1\n      });\n    };\n\n    this.state = {\n      reportList: [],\n      checkRequests: true,\n      selecteditem: -1,\n      seen: false\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.closePop = this.closePop.bind(this);\n  }\n\n  handleClick(i, event) {\n    this.setState({\n      seen: true,\n      selecteditem: i\n    });\n  }\n\n  render() {\n    const createlistItems = () => {\n      if (this.state.checkRequests) {\n        const obj = JSON.parse(localStorage.getItem(\"patient\"));\n        const user = {\n          contact: obj.contact\n        };\n        const promise1 = new Promise(function (resolve, reject) {\n          axios.post('http://localhost:4000/getReports', user).then(res => {\n            resolve(res.data);\n          });\n        });\n        promise1.then(value => {\n          console.log(value);\n          if (value != \"empty\") this.setState({\n            reportList: value,\n            checkRequests: false\n          });\n        });\n      }\n\n      if (this.state.reportList.length > 0) {\n        return this.state.reportList.map((item, index) => {\n          const {\n            dateadded,\n            model,\n            prediction\n          } = item;\n          return React.createElement(\"tr\", {\n            key: index,\n            onClick: this.handleClick.bind(this, index),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78\n            },\n            __self: this\n          }, index), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }, dateadded), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          }, model), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81\n            },\n            __self: this\n          }, prediction));\n        });\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        });\n      }\n    };\n\n    const listItems = createlistItems();\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Report List\"), React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"#\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Date\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Type\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Prediction\")), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, listItems))), React.createElement(\"div\", {\n      style: this.state.seen ? {\n        display: 'block'\n      } : {\n        display: 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"popup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"close\",\n      onClick: this.closePop,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"\\xD7\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Image\"), React.createElement(\"img\", {\n      src: this.state.reportList[this.state.selecteditem].image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }))))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/test1/front-end/src/components/component-report.js"],"names":["React","Component","ReactDOM","axios","Table","reportList","constructor","props","closePop","console","log","setState","seen","selecteditem","state","checkRequests","handleClick","bind","i","event","render","createlistItems","obj","JSON","parse","localStorage","getItem","user","contact","promise1","Promise","resolve","reject","post","then","res","data","value","length","map","item","index","dateadded","model","prediction","listItems","display","image"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport axios from 'axios';\r\nimport Table from 'react-bootstrap/Table'\r\nimport '../css/medicine.css';\r\n\r\n\r\n\r\n\r\nexport default class reportList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            reportList:[],\r\n            checkRequests:true,\r\n            selecteditem:-1,\r\n            seen:false,       \r\n        }\r\n\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.closePop = this.closePop.bind(this)\r\n  \r\n    }\r\n\r\n    closePop = () => {\r\n        console.log(\"toggle pop\")\r\n        this.setState({\r\n          seen: false,\r\n          selecteditem:-1,\r\n        });\r\n      };\r\n\r\n    handleClick(i, event) {\r\n        this.setState({\r\n            seen: true,\r\n            selecteditem:i,\r\n          });\r\n\r\n    }\r\n\r\n      render() {\r\n\r\n        const createlistItems = () => {\r\n\r\n            if(this.state.checkRequests)\r\n            {\r\n                const obj = JSON.parse( localStorage.getItem(\"patient\"))\r\n                const user= {\r\n                    contact:obj.contact,\r\n                }\r\n            \r\n                const promise1 = new Promise(function(resolve, reject) {\r\n                    \r\n                    axios.post('http://localhost:4000/getReports',user)\r\n                    .then(res => {\r\n                        resolve(res.data)\r\n                    });\r\n                });\r\n                \r\n                promise1.then((value) =>{\r\n                    console.log(value);\r\n                    if(value!=\"empty\")\r\n                    this.setState({\r\n                        reportList: value,\r\n                        checkRequests:false,\r\n                    });\r\n                });\r\n            \r\n            }\r\n\r\n            if(this.state.reportList.length>0)\r\n            {\r\n                return this.state.reportList.map((item, index) => {\r\n                    const { dateadded, model,prediction} = item \r\n                    return (\r\n                        <tr key={index} onClick={this.handleClick.bind(this, index)}>\r\n                            <td>{index}</td>\r\n                            <td>{dateadded}</td>\r\n                            <td>{model}</td>\r\n                            <td>{prediction}</td>\r\n                        </tr>\r\n                        )\r\n                 })            \r\n            }\r\n            else\r\n            {\r\n                return (\r\n                    <div>\r\n                    </div>\r\n                    );\r\n            }\r\n        }        \r\n      \r\n        const listItems =createlistItems()\r\n\r\n        return (\r\n            <div >\r\n                <div>\r\n                    <h3>Report List</h3>\r\n                    <Table>\r\n                    <thead>\r\n                    <td>#</td>\r\n                    <td>Date</td>\r\n                    <td>Type</td>\r\n                    <td>Prediction</td>\r\n                    </thead>\r\n                    <tbody>\r\n                    {listItems}\r\n                    </tbody>\r\n                    \r\n                    </Table>\r\n\r\n                </div>\r\n\r\n                <div  style={this.state.seen ? {display:'block'}:{display:'none'}}>\r\n                    <div className=\"popup\">\r\n                        <div className=\"content\">\r\n                            <span className=\"close\"  onClick={this.closePop}>\r\n                            &times;\r\n                            </span>\r\n\r\n                            <div>\r\n                                <h3>Image</h3>\r\n                                <img src={this.state.reportList[this.state.selecteditem].image}/>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n            \r\n        )\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}