{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\test1\\\\front-end\\\\src\\\\components\\\\component-doctor-follow-up-requests.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Table from 'react-bootstrap/Table';\nexport default class DoctorFollowUps extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      requestList: [],\n      checkRequests: true\n    };\n    this.handleAccept = this.handleAccept.bind(this);\n    this.handleReject = this.handleReject.bind(this);\n  }\n\n  handleAccept(i, event) {\n    alert(\"This is Accept funtion \" + i);\n  }\n\n  handleReject(i, event) {\n    alert(\"this is reject function \" + i);\n  }\n\n  render() {\n    const createlistItems = () => {\n      if (this.state.checkRequests) {\n        const user = {\n          email: localStorage.getItem(\"email\")\n        };\n        const promise1 = new Promise(function (resolve, reject) {\n          axios.post('http://localhost:4000/getrequests', user).then(res => {\n            resolve(res.data);\n          });\n        });\n        promise1.then(value => {\n          console.log(value);\n          if (value != \"empty\") this.setState({\n            requestList: value,\n            checkRequests: false\n          });\n        });\n      }\n\n      if (this.state.requestList.length > 0) {\n        return this.state.requestList.map((item, index) => {\n          const {\n            name,\n            contact,\n            followondate,\n            time\n          } = item;\n          return React.createElement(\"tr\", {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63\n            },\n            __self: this\n          }, name), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          }, contact), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            },\n            __self: this\n          }, folllowondate), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66\n            },\n            __self: this\n          }, time), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            type: \"submit\",\n            value: \"Accept\",\n            onClick: this.handleAccept.bind(this, index),\n            className: \"btn-primary\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67\n            },\n            __self: this\n          })), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            type: \"submit\",\n            value: \"Reject\",\n            onClick: this.handleReject.bind(this, index),\n            className: \"btn-primary\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68\n            },\n            __self: this\n          })));\n        });\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        });\n      }\n    };\n\n    const listItems = createlistItems();\n    return React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Follow Up Requests\"), React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Patient Name\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Patient Contact\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Date\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Time\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Accept\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Reject\")), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, listItems))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/test1/front-end/src/components/component-doctor-follow-up-requests.js"],"names":["React","Component","axios","Table","DoctorFollowUps","constructor","props","state","requestList","checkRequests","handleAccept","bind","handleReject","i","event","alert","render","createlistItems","user","email","localStorage","getItem","promise1","Promise","resolve","reject","post","then","res","data","value","console","log","setState","length","map","item","index","name","contact","followondate","time","folllowondate","listItems"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Table from 'react-bootstrap/Table'\r\n\r\nexport default class DoctorFollowUps extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            requestList:[],\r\n            checkRequests:true       \r\n        }\r\n        this.handleAccept = this.handleAccept.bind(this);\r\n        this.handleReject = this.handleReject.bind(this);\r\n\r\n    }\r\n\r\n    handleAccept(i, event) {\r\n        alert(\"This is Accept funtion \"+i);\r\n    }\r\n\r\n    handleReject(i, event) {\r\n        alert(\"this is reject function \"+i);\r\n    }\r\n\r\n      render() {\r\n\r\n\r\n        const createlistItems = () => {\r\n\r\n            if(this.state.checkRequests)\r\n            {\r\n            \r\n                const user= {\r\n                    email:localStorage.getItem(\"email\"),\r\n                }\r\n\r\n                const promise1 = new Promise(function(resolve, reject) {\r\n                    \r\n                    axios.post('http://localhost:4000/getrequests', user)\r\n                    .then(res => {\r\n                        resolve(res.data)\r\n                    });\r\n                });\r\n                \r\n                promise1.then((value) =>{\r\n                    console.log(value);\r\n                    if(value!=\"empty\")\r\n                    this.setState({\r\n                        requestList: value,\r\n                        checkRequests:false,\r\n                    });\r\n                });\r\n            \r\n            }\r\n\r\n            if(this.state.requestList.length>0)\r\n            {\r\n                return this.state.requestList.map((item, index) => {\r\n                    const { name,contact, followondate,time} = item \r\n                    return (\r\n                        <tr key={index} >\r\n                            <td>{name}</td>\r\n                            <td>{contact}</td>\r\n                            <td>{folllowondate}</td>\r\n                            <td>{time}</td>\r\n                            <td><input type=\"submit\"  value=\"Accept\" onClick={this.handleAccept.bind(this, index)} className=\"btn-primary\" /></td>\r\n                            <td><input type=\"submit\"  value=\"Reject\" onClick={this.handleReject.bind(this, index)} className=\"btn-primary\" /></td>\r\n                        </tr>\r\n                        )\r\n                 })            \r\n            }\r\n            else\r\n            {\r\n                return (\r\n                    <div>\r\n                    </div>\r\n                    );\r\n            }\r\n        }        \r\n      \r\n        const listItems =createlistItems()\r\n\r\n        return (\r\n            <div className=\"form-group\">\r\n                   <div>\r\n                    <h3>Follow Up Requests</h3>\r\n                    <Table>\r\n                    <thead>\r\n                    <td>Patient Name</td>\r\n                    <td>Patient Contact</td>\r\n                    <td>Date</td>\r\n                    <td>Time</td>\r\n                    <td>Accept</td>\r\n                    <td>Reject</td>\r\n                    </thead>\r\n                    <tbody>\r\n                    {listItems}\r\n                    </tbody>\r\n                    \r\n                    </Table>\r\n\r\n                   </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}