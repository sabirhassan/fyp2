{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\salahudin\\\\Desktop\\\\FYP-Version-Controlled\\\\fyp2\\\\front-end\\\\src\\\\components\\\\component-reset-password.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nfunction ValidateEmail(mail) {\n  var mailformat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n  if (mail.match(mailformat)) {\n    return false;\n  } else {\n    return true;\n  }\n}\n\nfunction validate(email, password) {\n  // true means invalid, so our conditions got reversed\n  return {\n    email: ValidateEmail(email),\n    password: password.length < 8\n  };\n}\n\nexport default class resetPassword extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleBlur = field => evt => {\n      this.setState({\n        touched: { ...this.state.touched,\n          [field]: true\n        }\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      touched: {\n        email: false,\n        password: false\n      }\n    };\n    this.onChangeemail = this.onChangeemail.bind(this);\n    this.onChangepassword = this.onChangepassword.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onChangeemail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  onChangepassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    console.log(`Form submitted:`);\n    console.log(`Email: ${this.state.email}`);\n    console.log(`Password: ${this.state.password}`);\n    const user = {\n      email: this.state.email,\n      password: this.state.password\n    };\n    console.log(user);\n    console.log(localStorage.getItem(\"id\"));\n    axios.post('http://localhost:4000/passwordreset', user).then(res => {\n      console.log(res.data);\n\n      if (res.data === \"success\") {\n        alert(\"Password reset Successfuly\");\n      } else {\n        alert(res.data);\n      }\n    });\n    this.setState({\n      email: '',\n      password: ''\n    });\n  }\n\n  render() {\n    const errors = validate(this.state.email, this.state.password);\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\n\n    const shouldMarkError = field => {\n      const hasError = errors[field];\n      const shouldShow = this.state.touched[field];\n      return hasError ? shouldShow : false;\n    };\n\n    return React.createElement(\"div\", {\n      style: {\n        marginTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Reset Password\"), React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Email: \"), React.createElement(\"input\", {\n      type: \"text\",\n      className: shouldMarkError(\"email\") ? \"form-control is-invalid\" : \"form-control\",\n      value: this.state.email,\n      onChange: this.onChangeemail,\n      onBlur: this.handleBlur(\"email\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), shouldMarkError(\"email\") ? React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Please provide a valid email.\") : \"\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Password: \"), React.createElement(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      value: this.state.password,\n      onChange: this.onChangepassword,\n      onBlur: this.handleBlur(\"password\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), shouldMarkError(\"password\") ? React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Password should meet the minimum length of 8 Characters.\") : \"\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      disabled: isDisabled,\n      value: \"Create User\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/salahudin/Desktop/FYP-Version-Controlled/fyp2/front-end/src/components/component-reset-password.js"],"names":["React","Component","axios","ValidateEmail","mail","mailformat","match","validate","email","password","length","resetPassword","constructor","props","handleBlur","field","evt","setState","touched","state","onChangeemail","bind","onChangepassword","onSubmit","e","target","value","preventDefault","console","log","user","localStorage","getItem","post","then","res","data","alert","render","errors","isDisabled","Object","keys","some","x","shouldMarkError","hasError","shouldShow","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction ValidateEmail(mail) \r\n{\r\n    var mailformat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n    if(mail.match(mailformat))\r\n    {\r\n    return false;\r\n    }\r\n    else\r\n    {\r\n    return true;\r\n    }\r\n}\r\n\r\nfunction validate(email, password) {\r\n    // true means invalid, so our conditions got reversed\r\n    return {\r\n      email: ValidateEmail(email),\r\n      password: password.length < 8\r\n    };\r\n}\r\n\r\nexport default class resetPassword extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            touched: {\r\n                email: false,\r\n                password: false,\r\n              }\r\n        }\r\n        this.onChangeemail = this.onChangeemail.bind(this);\r\n        this.onChangepassword = this.onChangepassword.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    \r\n\r\n    onChangeemail(e) {\r\n        this.setState({\r\n            email: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangepassword(e) {\r\n        this.setState({\r\n            password: e.target.value\r\n        });\r\n    }\r\n\r\n\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        \r\n        console.log(`Form submitted:`);\r\n        console.log(`Email: ${this.state.email}`);\r\n        console.log(`Password: ${this.state.password}`);\r\n\r\n        const user= {\r\n            email:this.state.email,\r\n            password:this.state.password,\r\n        }\r\n\r\n        console.log(user)\r\n        \r\n        console.log(localStorage.getItem(\"id\"));\r\n\r\n        axios.post('http://localhost:4000/passwordreset', user)\r\n            .then(res => {\r\n                console.log(res.data);\r\n                if(res.data===\"success\")\r\n                {\r\n                    alert(\"Password reset Successfuly\");\r\n                }\r\n                else\r\n                {\r\n                    alert(res.data);\r\n                }\r\n            });\r\n\r\n        this.setState({\r\n            email: '',\r\n            password: '',\r\n        });\r\n    }\r\n\r\n    handleBlur = (field) => (evt) => {\r\n        this.setState({\r\n          touched: { ...this.state.touched, [field]: true },\r\n        });\r\n      }\r\n\r\n      \r\n\r\n    render() {\r\n        const errors = validate(this.state.email,this.state.password);\r\n        const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n\r\n        const shouldMarkError = field => {\r\n            const hasError = errors[field];\r\n            const shouldShow = this.state.touched[field];\r\n      \r\n            return hasError ? shouldShow : false;\r\n          };\r\n        return (\r\n            <div style={{marginTop: 10}}>\r\n                <h3>Reset Password</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                    <label>Email: </label>\r\n                    <input \r\n                            type=\"text\" \r\n                            className={shouldMarkError(\"email\") ? \"form-control is-invalid\" : \"form-control\"}\r\n                            value={this.state.email}\r\n                            onChange={this.onChangeemail}\r\n                            onBlur={this.handleBlur(\"email\")}\r\n                            />\r\n                            {shouldMarkError(\"email\") ?\r\n                                <div className=\"invalid-feedback\">\r\n                                    Please provide a valid email.\r\n                                </div>\r\n                            :\"\"}\r\n\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Password: </label>\r\n                        <input \r\n                                type=\"password\" \r\n                                className=\"form-control\"\r\n                                value={this.state.password}\r\n                                onChange={this.onChangepassword}\r\n                                onBlur={this.handleBlur(\"password\")}\r\n                                />\r\n                                {shouldMarkError(\"password\") ?\r\n                                <div className=\"invalid-feedback\">\r\n                                    Password should meet the minimum length of 8 Characters.\r\n                                </div>\r\n                                :\"\"}\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" disabled={isDisabled} value=\"Create User\" className=\"btn btn-primary\" />\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}