{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\test1\\\\front-end\\\\src\\\\components\\\\component-see-prescription.js\";\nimport React, { Component } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport axios from 'axios';\nimport '../css/medicine.css';\nexport default class SeePrescription extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      prescription: [],\n      checkPrescription: false\n    };\n  }\n\n  render() {\n    const createTableElement = () => {\n      if (this.state.checkPrescription) {\n        const obj = JSON.parse(localStorage.getItem(\"patient\"));\n        const user = {\n          contact: obj.contact\n        };\n        const promise1 = new Promise(function (resolve, reject) {\n          axios.post('http://localhost:4000/getPrescription', user).then(res => {\n            resolve(res.data);\n          });\n        });\n        promise1.then(value => {\n          console.log(value);\n          if (value != \"empty\") this.setState({\n            prescription: value,\n            checkPrescription: false\n          });\n        });\n      }\n\n      if (this.state.prescription.length > 0) {\n        return this.state.prescription.map((item, index) => {\n          const {\n            contact,\n            doctor,\n            date,\n            medicine,\n            dosage,\n            days,\n            morning,\n            afternoon,\n            evening,\n            instructions,\n            status,\n            notify\n          } = item;\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          }, React.createElement(Table, {\n            striped: true,\n            bordered: true,\n            hover: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          }, React.createElement(\"thead\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          }, React.createElement(\"tr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          }, React.createElement(\"th\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          }, \"prescription #\", index))), React.createElement(\"tbody\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            },\n            __self: this\n          }, React.createElement(\"tr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          }, \"contact:\", contact), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            },\n            __self: this\n          }, \"doctor:\", doctor), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66\n            },\n            __self: this\n          }, \"date:\", date), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67\n            },\n            __self: this\n          }, \"medicine:\", medicine), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68\n            },\n            __self: this\n          }, \"dosage: \", dosage), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            },\n            __self: this\n          }, \"days: \", days), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70\n            },\n            __self: this\n          }, morning ? \"morning\" : \"\"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          }, afternoon ? \"afternoon\" : \"\"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72\n            },\n            __self: this\n          }, evening ? \"evening\" : \"\"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73\n            },\n            __self: this\n          }, \"instructions:\", instructions), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74\n            },\n            __self: this\n          }, \"Current:\", status ? \"True\" : \"False\")))));\n        });\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        });\n      }\n    };\n\n    const tableElement = createTableElement();\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, tableElement));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/test1/front-end/src/components/component-see-prescription.js"],"names":["React","Component","Table","axios","SeePrescription","constructor","props","state","prescription","checkPrescription","render","createTableElement","obj","JSON","parse","localStorage","getItem","user","contact","promise1","Promise","resolve","reject","post","then","res","data","value","console","log","setState","length","map","item","index","doctor","date","medicine","dosage","days","morning","afternoon","evening","instructions","status","notify","tableElement"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Table from 'react-bootstrap/Table'\r\nimport axios from 'axios';\r\nimport '../css/medicine.css';\r\n\r\n\r\nexport default class SeePrescription extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            prescription:[],\r\n            checkPrescription:false,\r\n            \r\n        }\r\n    }\r\n\r\n      render() {\r\n\r\n        const createTableElement = () => {\r\n\r\n            if( this.state.checkPrescription)\r\n            {\r\n            \r\n                const obj = JSON.parse( localStorage.getItem(\"patient\"))\r\n                const user= {\r\n                    contact:obj.contact,\r\n                }\r\n\r\n                const promise1 = new Promise(function(resolve, reject) {\r\n                    \r\n                    axios.post('http://localhost:4000/getPrescription', user)\r\n                    .then(res => {\r\n                        resolve(res.data)\r\n                    });\r\n                });\r\n                \r\n                promise1.then((value) =>{\r\n                    console.log(value);\r\n                    if(value!=\"empty\")\r\n                    this.setState({\r\n                        prescription: value,\r\n                        checkPrescription:false,\r\n                    });\r\n                });\r\n            \r\n            }\r\n\r\n            if(this.state.prescription.length>0)\r\n            {\r\n                return this.state.prescription.map((item, index) => {\r\n                    const { contact,doctor, date, medicine, dosage,days, morning,afternoon,evening, instructions,status,notify  } = item \r\n                    return (\r\n     \r\n                        <div >\r\n                        <Table striped bordered hover >\r\n                        <thead>\r\n                            <tr>\r\n                                <th>prescription #{index}</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        <tr>\r\n                            <td >contact:{contact}</td>\r\n                            <td >doctor:{doctor}</td>\r\n                            <td >date:{date}</td>\r\n                            <td >medicine:{medicine}</td>\r\n                            <td >dosage: {dosage}</td>\r\n                            <td >days: {days}</td>\r\n                            <td >{morning?\"morning\":\"\"}</td>\r\n                            <td >{afternoon?\"afternoon\":\"\"}</td>\r\n                            <td >{evening?\"evening\":\"\"}</td>\r\n                            <td >instructions:{instructions}</td>\r\n                            <td >Current:{status?\"True\":\"False\"}</td>\r\n                            \r\n                        </tr>\r\n\r\n                        </tbody>\r\n                        </Table>\r\n                        </div>\r\n                    )\r\n                 })            \r\n            }\r\n            else\r\n            {\r\n                return (\r\n                    <div>\r\n                    </div>\r\n                    );\r\n            }\r\n        }\r\n\r\n     \r\n        const tableElement = createTableElement() \r\n\r\n        return (\r\n            <div >\r\n                <div>\r\n                {tableElement}\r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}