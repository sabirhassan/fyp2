{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\test1\\\\front-end\\\\src\\\\components\\\\component-medicines.js\";\nimport React, { Component } from 'react';\nimport { Datatable } from \"@o2xp/react-datatable\";\nimport axios from 'axios';\nimport DatePicker from 'react-date-picker';\nimport { FreeBreakfast as CoffeeIcon, CallSplit as CallSplitIcon } from \"@material-ui/icons\";\nimport { chunk } from \"lodash\";\nconst options = {\n  title: \"My super datatable\",\n  dimensions: {\n    datatable: {\n      width: \"90%\",\n      height: \"40%\"\n    },\n    row: {\n      height: \"48px\"\n    }\n  },\n  keyColumn: \"id\",\n  font: \"Arial\",\n  data: {\n    columns: [{\n      id: \"id\",\n      label: \"id\",\n      colSize: \"150px\",\n      editable: false\n    }, {\n      id: \"Drug Name\",\n      label: \"Name\",\n      colSize: \"100px\",\n      editable: true,\n      dataType: \"text\",\n      inputType: \"input\"\n    }, {\n      id: \"Form\",\n      label: \"Form\",\n      colSize: \"100px\",\n      editable: true,\n      dataType: \"text\",\n      inputType: \"input\"\n    }, {\n      id: \"Strength\",\n      label: \"Strength\",\n      colSize: \"100px\",\n      editable: true,\n      dataType: \"text\",\n      inputType: \"input\"\n    }, {\n      id: \"Active Ingredient\",\n      label: \"Active Ingredient\",\n      colSize: \"100px\",\n      editable: true,\n      dataType: \"text\",\n      inputType: \"input\"\n    }],\n    rows: [{\n      'id': \"50cf\",\n      'Drug Name': \"Kerr Mayo\",\n      'Form': 'true',\n      'Strength': \"1972-09-04T11:09:59\",\n      'Active Ingredient': \"green\"\n    }, {\n      'id': \"50cf\",\n      'Drug Name': \"Kerr Mayo\",\n      'Form': 'true',\n      'Strength': \"1972-09-04T11:09:59\",\n      'Active Ingredient': \"green\"\n    }, {\n      'id': \"50cf\",\n      'Drug Name': \"Kerr Mayo\",\n      'Form': 'true',\n      'Strength': \"1972-09-04T11:09:59\",\n      'Active Ingredient': \"green\"\n    }]\n  },\n  features: {\n    canEdit: true,\n    canDelete: true,\n    canSearch: true,\n    canOrderColumns: true,\n    canSelectRow: true,\n    rowsPerPage: {\n      available: [10, 25, 50, 100],\n      selected: 50\n    }\n  }\n};\nexport default class medicineList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.actionsRow = ({\n      type,\n      payload\n    }) => {\n      console.log(type);\n      console.log(payload);\n    };\n\n    this.state = {\n      data: [],\n      gotData: false,\n      options: {}\n    };\n\n    if (!this.state.gotData) {\n      const promise1 = new Promise(function (resolve, reject) {\n        axios.post('http://localhost:4000/getMedicines').then(res => {\n          resolve(res.data);\n        });\n      });\n      promise1.then(value => {\n        if (value != \"empty\") this.setState({\n          data: value,\n          gotData: true\n        });\n      });\n    }\n\n    this.setState({\n      options: {\n        title: \"Medicine DataTable\",\n        dimensions: {\n          datatable: {\n            width: \"90%\",\n            height: \"40%\"\n          },\n          row: {\n            height: \"48px\"\n          }\n        },\n        keyColumn: \"id\",\n        font: \"Arial\",\n        data: {\n          columns: [{\n            id: \"id\",\n            label: \"id\",\n            colSize: \"150px\",\n            editable: false\n          }, {\n            id: \"Drug Name\",\n            label: \"Name\",\n            colSize: \"100px\",\n            editable: true,\n            dataType: \"text\",\n            inputType: \"input\"\n          }, {\n            id: \"Form\",\n            label: \"Form\",\n            colSize: \"100px\",\n            editable: true,\n            dataType: \"text\",\n            inputType: \"input\"\n          }, {\n            id: \"Strength\",\n            label: \"Strength\",\n            colSize: \"100px\",\n            editable: true,\n            dataType: \"text\",\n            inputType: \"input\"\n          }, {\n            id: \"Active Ingredient\",\n            label: \"Active Ingredient\",\n            colSize: \"100px\",\n            editable: true,\n            dataType: \"text\",\n            inputType: \"input\"\n          }],\n          rows: this.state.data\n        },\n        features: {\n          canEdit: true,\n          canDelete: true,\n          canSearch: true,\n          canOrderColumns: true,\n          canSelectRow: true,\n          rowsPerPage: {\n            available: [10, 25, 50, 100],\n            selected: 50\n          }\n        }\n      }\n    });\n  }\n\n  getData() {\n    if (!this.state.gotData) {\n      const promise1 = new Promise(function (resolve, reject) {\n        axios.post('http://localhost:4000/getMedicines').then(res => {\n          resolve(res.data);\n        });\n      });\n      promise1.then(value => {\n        if (value != \"empty\") this.setState({\n          data: value,\n          gotData: true\n        });\n      });\n    }\n  }\n\n  setOptions() {\n    this.setState({\n      options: {\n        title: \"Medicine DataTable\",\n        dimensions: {\n          datatable: {\n            width: \"90%\",\n            height: \"40%\"\n          },\n          row: {\n            height: \"48px\"\n          }\n        },\n        keyColumn: \"id\",\n        font: \"Arial\",\n        data: {\n          columns: [{\n            id: \"id\",\n            label: \"id\",\n            colSize: \"150px\",\n            editable: false\n          }, {\n            id: \"Drug Name\",\n            label: \"Name\",\n            colSize: \"100px\",\n            editable: true,\n            dataType: \"text\",\n            inputType: \"input\"\n          }, {\n            id: \"Form\",\n            label: \"Form\",\n            colSize: \"100px\",\n            editable: true,\n            dataType: \"text\",\n            inputType: \"input\"\n          }, {\n            id: \"Strength\",\n            label: \"Strength\",\n            colSize: \"100px\",\n            editable: true,\n            dataType: \"text\",\n            inputType: \"input\"\n          }, {\n            id: \"Active Ingredient\",\n            label: \"Active Ingredient\",\n            colSize: \"100px\",\n            editable: true,\n            dataType: \"text\",\n            inputType: \"input\"\n          }],\n          rows: this.state.data\n        },\n        features: {\n          canEdit: true,\n          canDelete: true,\n          canSearch: true,\n          canOrderColumns: true,\n          canSelectRow: true,\n          rowsPerPage: {\n            available: [10, 25, 50, 100],\n            selected: 50\n          }\n        }\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        marginTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, \"Medicine List\"), React.createElement(Datatable, {\n      options: this.state.options,\n      actions: this.actionsRow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/test1/front-end/src/components/component-medicines.js"],"names":["React","Component","Datatable","axios","DatePicker","FreeBreakfast","CoffeeIcon","CallSplit","CallSplitIcon","chunk","options","title","dimensions","datatable","width","height","row","keyColumn","font","data","columns","id","label","colSize","editable","dataType","inputType","rows","features","canEdit","canDelete","canSearch","canOrderColumns","canSelectRow","rowsPerPage","available","selected","medicineList","constructor","props","actionsRow","type","payload","console","log","state","gotData","promise1","Promise","resolve","reject","post","then","res","value","setState","getData","setOptions","render","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {Datatable} from \"@o2xp/react-datatable\";\r\nimport axios from 'axios';\r\nimport DatePicker from 'react-date-picker';\r\nimport {\r\n    FreeBreakfast as CoffeeIcon,\r\n    CallSplit as CallSplitIcon\r\n  } from \"@material-ui/icons\";\r\n  import { chunk } from \"lodash\";\r\n\r\nconst options = {\r\n    title: \"My super datatable\",\r\n    dimensions: {\r\n      datatable: {\r\n        width: \"90%\",\r\n        height: \"40%\"\r\n      },\r\n      row: {\r\n        height: \"48px\"\r\n      }\r\n    },\r\n    keyColumn: \"id\",\r\n    font: \"Arial\",\r\n    data: {\r\n      columns: [\r\n        {\r\n            id: \"id\",\r\n            label: \"id\",\r\n            colSize: \"150px\",\r\n            editable: false\r\n        },\r\n        {\r\n            id: \"Drug Name\",\r\n            label: \"Name\",\r\n            colSize: \"100px\",\r\n            editable: true,\r\n            dataType: \"text\",\r\n            inputType: \"input\"\r\n        },\r\n        {\r\n            id: \"Form\",\r\n            label: \"Form\",\r\n            colSize: \"100px\",\r\n            editable: true,\r\n            dataType: \"text\",\r\n            inputType: \"input\"\r\n        },\r\n        {\r\n            id: \"Strength\",\r\n            label: \"Strength\",\r\n            colSize: \"100px\",\r\n            editable: true,\r\n            dataType: \"text\",\r\n            inputType: \"input\"\r\n        },\r\n        {\r\n            id: \"Active Ingredient\",\r\n            label: \"Active Ingredient\",\r\n            colSize: \"100px\",\r\n            editable: true,\r\n            dataType: \"text\",\r\n            inputType: \"input\"\r\n        },\r\n      \r\n        ],\r\n\r\n      rows: [\r\n        {\r\n            'id': \"50cf\",\r\n            'Drug Name': \"Kerr Mayo\",\r\n            'Form': 'true',\r\n            'Strength': \"1972-09-04T11:09:59\",\r\n            'Active Ingredient': \"green\",\r\n        },\r\n        {\r\n            'id': \"50cf\",\r\n            'Drug Name': \"Kerr Mayo\",\r\n            'Form': 'true',\r\n            'Strength': \"1972-09-04T11:09:59\",\r\n            'Active Ingredient': \"green\",\r\n        },\r\n        {\r\n            'id': \"50cf\",\r\n            'Drug Name': \"Kerr Mayo\",\r\n            'Form': 'true',\r\n            'Strength': \"1972-09-04T11:09:59\",\r\n            'Active Ingredient': \"green\",\r\n        }\r\n      ]\r\n    },\r\n    features: {\r\n      canEdit: true,\r\n      canDelete: true,\r\n      canSearch: true,\r\n      canOrderColumns: true,\r\n      canSelectRow: true,\r\n      rowsPerPage: {\r\n        available: [10, 25, 50, 100],\r\n        selected: 50\r\n      },\r\n    }\r\n  };\r\n\r\n\r\nexport default class medicineList extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: [],\r\n            gotData:false,\r\n            options:{}, \r\n        }\r\n\r\n        if(!(this.state.gotData))\r\n        {\r\n            const promise1 = new Promise(function(resolve, reject) {\r\n                    \r\n                axios.post('http://localhost:4000/getMedicines',)\r\n                .then(res => {\r\n                    resolve(res.data)\r\n                });\r\n            });\r\n            \r\n            promise1.then((value) =>{\r\n                if(value!=\"empty\")\r\n                this.setState({\r\n                    data: value,\r\n                    gotData:true\r\n                });\r\n            });\r\n            \r\n        }\r\n\r\n        this.setState({\r\n            options:{\r\n                title: \"Medicine DataTable\",\r\n                dimensions: {\r\n                  datatable: {\r\n                    width: \"90%\",\r\n                    height: \"40%\"\r\n                  },\r\n                  row: {\r\n                    height: \"48px\"\r\n                  }\r\n                },\r\n                keyColumn: \"id\",\r\n                font: \"Arial\",\r\n                data: {\r\n                  columns: [\r\n                    {\r\n                        id: \"id\",\r\n                        label: \"id\",\r\n                        colSize: \"150px\",\r\n                        editable: false\r\n                    },\r\n                    {\r\n                        id: \"Drug Name\",\r\n                        label: \"Name\",\r\n                        colSize: \"100px\",\r\n                        editable: true,\r\n                        dataType: \"text\",\r\n                        inputType: \"input\"\r\n                    },\r\n                    {\r\n                        id: \"Form\",\r\n                        label: \"Form\",\r\n                        colSize: \"100px\",\r\n                        editable: true,\r\n                        dataType: \"text\",\r\n                        inputType: \"input\"\r\n                    },\r\n                    {\r\n                        id: \"Strength\",\r\n                        label: \"Strength\",\r\n                        colSize: \"100px\",\r\n                        editable: true,\r\n                        dataType: \"text\",\r\n                        inputType: \"input\"\r\n                    },\r\n                    {\r\n                        id: \"Active Ingredient\",\r\n                        label: \"Active Ingredient\",\r\n                        colSize: \"100px\",\r\n                        editable: true,\r\n                        dataType: \"text\",\r\n                        inputType: \"input\"\r\n                    },\r\n                  \r\n                    ],\r\n            \r\n                  rows: this.state.data\r\n                },\r\n                features: {\r\n                  canEdit: true,\r\n                  canDelete: true,\r\n                  canSearch: true,\r\n                  canOrderColumns: true,\r\n                  canSelectRow: true,\r\n                  rowsPerPage: {\r\n                    available: [10, 25, 50, 100],\r\n                    selected: 50\r\n                  },\r\n                }\r\n              }\r\n        })\r\n\r\n\r\n    }\r\n    \r\n    getData(){\r\n        if(!(this.state.gotData))\r\n        {\r\n            const promise1 = new Promise(function(resolve, reject) {\r\n                    \r\n                axios.post('http://localhost:4000/getMedicines',)\r\n                .then(res => {\r\n                    resolve(res.data)\r\n                });\r\n            });\r\n            \r\n            promise1.then((value) =>{\r\n                if(value!=\"empty\")\r\n                this.setState({\r\n                    data: value,\r\n                    gotData:true\r\n                });\r\n            });\r\n            \r\n        }\r\n    };\r\n    \r\n    setOptions(){\r\n        this.setState({\r\n            options:{\r\n                title: \"Medicine DataTable\",\r\n                dimensions: {\r\n                  datatable: {\r\n                    width: \"90%\",\r\n                    height: \"40%\"\r\n                  },\r\n                  row: {\r\n                    height: \"48px\"\r\n                  }\r\n                },\r\n                keyColumn: \"id\",\r\n                font: \"Arial\",\r\n                data: {\r\n                  columns: [\r\n                    {\r\n                        id: \"id\",\r\n                        label: \"id\",\r\n                        colSize: \"150px\",\r\n                        editable: false\r\n                    },\r\n                    {\r\n                        id: \"Drug Name\",\r\n                        label: \"Name\",\r\n                        colSize: \"100px\",\r\n                        editable: true,\r\n                        dataType: \"text\",\r\n                        inputType: \"input\"\r\n                    },\r\n                    {\r\n                        id: \"Form\",\r\n                        label: \"Form\",\r\n                        colSize: \"100px\",\r\n                        editable: true,\r\n                        dataType: \"text\",\r\n                        inputType: \"input\"\r\n                    },\r\n                    {\r\n                        id: \"Strength\",\r\n                        label: \"Strength\",\r\n                        colSize: \"100px\",\r\n                        editable: true,\r\n                        dataType: \"text\",\r\n                        inputType: \"input\"\r\n                    },\r\n                    {\r\n                        id: \"Active Ingredient\",\r\n                        label: \"Active Ingredient\",\r\n                        colSize: \"100px\",\r\n                        editable: true,\r\n                        dataType: \"text\",\r\n                        inputType: \"input\"\r\n                    },\r\n                  \r\n                    ],\r\n            \r\n                  rows: this.state.data\r\n                },\r\n                features: {\r\n                  canEdit: true,\r\n                  canDelete: true,\r\n                  canSearch: true,\r\n                  canOrderColumns: true,\r\n                  canSelectRow: true,\r\n                  rowsPerPage: {\r\n                    available: [10, 25, 50, 100],\r\n                    selected: 50\r\n                  },\r\n                }\r\n              }\r\n        })\r\n\r\n    }\r\n\r\n    actionsRow = ({ type, payload }) => {\r\n        console.log(type);\r\n        console.log(payload);\r\n    };\r\n        \r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div style={{marginTop: 10}}>\r\n                <h3>Medicine List</h3>\r\n                \r\n                <Datatable\r\n                options={this.state.options}\r\n                actions={this.actionsRow}\r\n              />\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}