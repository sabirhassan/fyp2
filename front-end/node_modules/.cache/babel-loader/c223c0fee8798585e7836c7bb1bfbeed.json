{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\salahudin\\\\Desktop\\\\FYP-Version-Controlled\\\\fyp2\\\\front-end\\\\src\\\\components\\\\component-register-user.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nfunction ValidateEmail(mail) {\n  var flag = false;\n  var mailformat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n  if (mail.match(mailformat)) {\n    const user = {\n      email: mail\n    };\n    console.log(mail);\n    axios.get('http://localhost:4000/mailcheck', {\n      params: {\n        email: mail\n      }\n    }).then(res => {\n      if (res.data.EmailNameInUse == true) {\n        flag = true;\n        console.log(\"email is NOT in use\");\n      } else {\n        flag = false;\n        console.log(\"email is in use\");\n      }\n    });\n  } else {\n    flag = true;\n  }\n\n  console.log(flag);\n  return flag;\n}\n\nfunction validate(firstName, lastName, email, password) {\n  // true means invalid, so our conditions got reversed\n  return {\n    firstName: firstName.length === 0,\n    lastName: lastName.length === 0,\n    email: ValidateEmail(email),\n    password: password.length < 8\n  };\n}\n\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleBlur = field => evt => {\n      this.setState({\n        touched: { ...this.state.touched,\n          [field]: true\n        }\n      });\n    };\n\n    this.state = {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      userType: 'doctor',\n      touched: {\n        firstName: false,\n        lastName: false,\n        email: false,\n        password: false\n      }\n    };\n    this.onChangefirstName = this.onChangefirstName.bind(this);\n    this.onChangelastName = this.onChangelastName.bind(this);\n    this.onChangeemail = this.onChangeemail.bind(this);\n    this.onChangepassword = this.onChangepassword.bind(this);\n    this.onChangeuserType = this.onChangeuserType.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onChangefirstName(e) {\n    this.setState({\n      firstName: e.target.value\n    });\n  }\n\n  onChangelastName(e) {\n    this.setState({\n      lastName: e.target.value\n    });\n  }\n\n  onChangeemail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  onChangepassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  onChangeuserType(e) {\n    this.setState({\n      userType: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    console.log(`Form submitted:`);\n    console.log(`firstName: ${this.state.firstName}`);\n    console.log(`lastName: ${this.state.lastName}`);\n    console.log(`Email: ${this.state.email}`);\n    console.log(`Password: ${this.state.password}`);\n    console.log(`userType: ${this.state.userType}`);\n    const user = {\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      email: this.state.email,\n      password: this.state.password,\n      userType: this.state.userType\n    };\n    console.log(user);\n    axios.post('http://localhost:4000/register', user).then(res => {\n      console.log(res.data);\n\n      if (res.data === \"success\") {\n        alert(\"User Created Successfuly\");\n      } else {\n        alert(res.data);\n      }\n    });\n    this.setState({\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      userTpye: 'doctor',\n      touched: {\n        firstName: false,\n        lastName: false,\n        email: false,\n        password: false\n      }\n    });\n  }\n\n  render() {\n    const errors = validate(this.state.firstName, this.state.lastName, this.state.email, this.state.password);\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\n\n    const shouldMarkError = field => {\n      const hasError = errors[field];\n      const shouldShow = this.state.touched[field];\n      return hasError ? shouldShow : false;\n    };\n\n    return React.createElement(\"div\", {\n      style: {\n        marginTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"Create New User\"), React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"First Name: \"), React.createElement(\"input\", {\n      type: \"text\",\n      className: shouldMarkError(\"firstName\") ? \"form-control is-invalid\" : \"form-control\",\n      value: this.state.firstName,\n      onChange: this.onChangefirstName,\n      onBlur: this.handleBlur(\"firstName\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), shouldMarkError(\"firstName\") ? React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Please provide a valid firstName.\") : \"\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Last Name: \"), React.createElement(\"input\", {\n      type: \"text\",\n      className: shouldMarkError(\"lastName\") ? \"form-control is-invalid\" : \"form-control\",\n      value: this.state.lastName,\n      onChange: this.onChangelastName,\n      onBlur: this.handleBlur(\"lastName\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }), shouldMarkError(\"lastName\") ? React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"Please provide a valid lastName.\") : \"\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"Email: \"), React.createElement(\"input\", {\n      type: \"text\",\n      className: shouldMarkError(\"email\") ? \"form-control is-invalid\" : \"form-control\",\n      value: this.state.email,\n      onChange: this.onChangeemail,\n      onBlur: this.handleBlur(\"email\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }), shouldMarkError(\"email\") ? React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \"Please provide a valid email.\") : \"\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, \"Password: \"), React.createElement(\"input\", {\n      type: \"password\",\n      className: shouldMarkError(\"password\") ? \"form-control is-invalid\" : \"form-control\",\n      value: this.state.password,\n      onChange: this.onChangepassword,\n      onBlur: this.handleBlur(\"password\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }), shouldMarkError(\"password\") ? React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, \"Password should meet the minimum length of 8 Characters.\") : \"\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, \"Choose a userType:\"), React.createElement(\"select\", {\n      value: this.state.userTpye,\n      onChange: this.onChangeuserType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"doctor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, \"Doctor\"), React.createElement(\"option\", {\n      value: \"doctor assistant\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, \"Doctor Assistant\"), React.createElement(\"option\", {\n      value: \"lab staff\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, \"Lab Staff\"), React.createElement(\"option\", {\n      value: \"admin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, \"Admin\"))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      disabled: isDisabled,\n      value: \"Create User\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/salahudin/Desktop/FYP-Version-Controlled/fyp2/front-end/src/components/component-register-user.js"],"names":["React","Component","axios","ValidateEmail","mail","flag","mailformat","match","user","email","console","log","get","params","then","res","data","EmailNameInUse","validate","firstName","lastName","password","length","Register","constructor","props","handleBlur","field","evt","setState","touched","state","userType","onChangefirstName","bind","onChangelastName","onChangeemail","onChangepassword","onChangeuserType","onSubmit","e","target","value","preventDefault","post","alert","userTpye","render","errors","isDisabled","Object","keys","some","x","shouldMarkError","hasError","shouldShow","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nfunction ValidateEmail(mail) \r\n{\r\n    var flag = false;\r\n    var mailformat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n    if(mail.match(mailformat))\r\n    {\r\n        \r\n        const user= {\r\n            email:mail\r\n        }\r\n        console.log(mail);\r\n        \r\n        axios.get('http://localhost:4000/mailcheck',{ params: {email: mail}})\r\n            .then(res => {\r\n                if(res.data.EmailNameInUse == true)\r\n                {\r\n                    flag =  true;\r\n                    console.log(\"email is NOT in use\");\r\n                }\r\n                else\r\n                {\r\n                    flag = false;\r\n                    console.log(\"email is in use\");\r\n                }\r\n            });       \r\n    }\r\n    else\r\n    {\r\n    flag =  true;\r\n    }\r\n    console.log(flag);\r\n    return flag;\r\n}\r\n\r\nfunction validate(firstName,lastName,email, password) {\r\n    // true means invalid, so our conditions got reversed\r\n    return {\r\n      firstName: firstName.length===0,\r\n      lastName: lastName.length===0,\r\n      email: ValidateEmail(email),\r\n      password: password.length < 8\r\n    };\r\n}\r\n\r\nexport default class Register extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            password: '',\r\n            userType: 'doctor',\r\n\r\n            touched: {\r\n                firstName: false,\r\n                lastName: false,\r\n                email: false,\r\n                password: false,\r\n              }\r\n        }\r\n        this.onChangefirstName = this.onChangefirstName.bind(this);\r\n        this.onChangelastName = this.onChangelastName.bind(this);\r\n        this.onChangeemail = this.onChangeemail.bind(this);\r\n        this.onChangepassword = this.onChangepassword.bind(this);\r\n        this.onChangeuserType = this.onChangeuserType.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    \r\n    onChangefirstName(e) {\r\n        this.setState({\r\n            firstName: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangelastName(e) {\r\n        this.setState({\r\n            lastName: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeemail(e) {\r\n        this.setState({\r\n            email: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangepassword(e) {\r\n        this.setState({\r\n            password: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeuserType(e) {\r\n        this.setState({\r\n            userType: e.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        \r\n        console.log(`Form submitted:`);\r\n        console.log(`firstName: ${this.state.firstName}`);\r\n        console.log(`lastName: ${this.state.lastName}`);\r\n        console.log(`Email: ${this.state.email}`);\r\n        console.log(`Password: ${this.state.password}`);\r\n        console.log(`userType: ${this.state.userType}`);\r\n\r\n        const user= {\r\n            firstName:this.state.firstName,\r\n            lastName:this.state.lastName,\r\n            email:this.state.email,\r\n            password:this.state.password,\r\n            userType:this.state.userType\r\n        }\r\n\r\n        console.log(user)\r\n        \r\n        axios.post('http://localhost:4000/register', user)\r\n            .then(res => {\r\n                console.log(res.data);\r\n                if(res.data===\"success\")\r\n                {\r\n                    alert(\"User Created Successfuly\");\r\n                }\r\n                else\r\n                {\r\n                    alert(res.data);\r\n                }\r\n            });\r\n\r\n        this.setState({\r\n            firstName:'',\r\n            lastName:'',\r\n            email: '',\r\n            password: '',\r\n            userTpye:'doctor',\r\n\r\n            touched: {\r\n                firstName: false,\r\n                lastName: false,\r\n                email: false,\r\n                password: false,\r\n              }\r\n        });\r\n    }\r\n\r\n\r\n\r\n      handleBlur = (field) => (evt) => {\r\n        this.setState({\r\n          touched: { ...this.state.touched, [field]: true },\r\n        });\r\n      }\r\n\r\n\r\n\r\n    render() {\r\n        const errors = validate(this.state.firstName,this.state.lastName,this.state.email, this.state.password);\r\n        const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n\r\n        const shouldMarkError = field => {\r\n            const hasError = errors[field];\r\n            const shouldShow = this.state.touched[field];\r\n      \r\n            return hasError ? shouldShow : false;\r\n          };\r\n\r\n        return (\r\n            <div style={{marginTop: 10}}>\r\n                <h3>Create New User</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\"> \r\n                        <label>First Name: </label>\r\n                        <input  type=\"text\"\r\n                                className={shouldMarkError(\"firstName\") ? \"form-control is-invalid\" : \"form-control\"}\r\n                                value={this.state.firstName}\r\n                                onChange={this.onChangefirstName}\r\n                                onBlur={this.handleBlur(\"firstName\")}\r\n                                />\r\n                                {shouldMarkError(\"firstName\") ?\r\n                                <div className=\"invalid-feedback\">\r\n                                    Please provide a valid firstName.\r\n                                </div>\r\n                                :\"\"}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Last Name: </label>\r\n                        <input \r\n                                type=\"text\" \r\n                                className={shouldMarkError(\"lastName\") ? \"form-control is-invalid\" : \"form-control\"}\r\n                                value={this.state.lastName}\r\n                                onChange={this.onChangelastName}\r\n                                onBlur={this.handleBlur(\"lastName\")}\r\n                                />\r\n                                {shouldMarkError(\"lastName\") ?\r\n                                <div className=\"invalid-feedback\">\r\n                                    Please provide a valid lastName.\r\n                                </div>\r\n                                :\"\"}\r\n                    </div>\r\n                    \r\n                    <div className=\"form-group\">\r\n                    <label>Email: </label>\r\n                    <input \r\n                            type=\"text\" \r\n                            className={shouldMarkError(\"email\") ? \"form-control is-invalid\" : \"form-control\"}\r\n                            value={this.state.email}\r\n                            onChange={this.onChangeemail}\r\n                            onBlur={this.handleBlur(\"email\")}\r\n                            />\r\n                            {shouldMarkError(\"email\") ?\r\n                                <div className=\"invalid-feedback\">\r\n                                    Please provide a valid email.\r\n                                </div>\r\n                            :\"\"}\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Password: </label>\r\n                        <input \r\n                                type=\"password\" \r\n                                className={shouldMarkError(\"password\") ? \"form-control is-invalid\" : \"form-control\"}\r\n                                value={this.state.password}\r\n                                onChange={this.onChangepassword}\r\n                                onBlur={this.handleBlur(\"password\")}\r\n                                />\r\n                                {shouldMarkError(\"password\") ?\r\n                                <div className=\"invalid-feedback\">\r\n                                    Password should meet the minimum length of 8 Characters.\r\n                                </div>\r\n                                :\"\"}\r\n                    </div>\r\n\r\n                    <div>\r\n                    <label >Choose a userType:</label>\r\n                        <select value={this.state.userTpye} onChange={this.onChangeuserType}>\r\n                        <option value=\"doctor\">Doctor</option>\r\n                        <option value=\"doctor assistant\">Doctor Assistant</option>\r\n                        <option value=\"lab staff\">Lab Staff</option>\r\n                        <option value=\"admin\">Admin</option>\r\n                        </select>\r\n                        \r\n                  </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" disabled={isDisabled} value=\"Create User\" className=\"btn btn-primary\" />\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}