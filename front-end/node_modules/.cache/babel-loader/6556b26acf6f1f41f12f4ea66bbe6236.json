{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\test1\\\\front-end\\\\src\\\\components\\\\component-register-user.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n/*async function ValidateEmail(mail) \r\n{\r\n    //console.log(\"RUNNING VALIDATE EMAIL\");\r\n    var flag = true;\r\n    var mailformat = /^\\w+([\\.-]?\\w+)@\\w+([\\.-]?\\w+)(\\.\\w{2,3})+$/;\r\n    if(mail.match(mailformat))\r\n    {\r\n        \r\n        const user= {\r\n            email:mail\r\n        }\r\n        console.log(mail);\r\n        \r\n        await axios.get('http://localhost:4000/mailcheck',{ params: {email: mail}})\r\n            .then(res => {\r\n                console.log(\"here\",res.data.EmailNameInUse);\r\n                //flag = res.data.EmailNameInUse;\r\n                return false;\r\n            });\r\n            \r\n        return false;       \r\n    }\r\n    else\r\n    {\r\n    //flag =  true;\r\n    return true;\r\n    }\r\n\r\n    //return flag;\r\n}*/\n\nasync function verify(email) {\n  await axios.get('http://localhost:4000/mailcheck', {\n    params: {\n      email: email\n    }\n  }).then(res => {\n    console.log(\"here in verify axios\", res.data.EmailNameInUse);\n    return res.data.EmailNameInUse;\n  });\n}\n\nfunction ValidateEmail(mail) {\n  var flag = false;\n  var mailformat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n  if (mail.match(mailformat)) {\n    console.log(\"here in if\", flag);\n    console.log(mail);\n    return flag;\n  } else {\n    flag = true;\n    console.log(mail);\n    console.log(\"here in else\", flag);\n    return flag;\n  }\n}\n\nfunction validate(name, email, password) {\n  // true means invalid, so our conditions got reversed\n  return {\n    name: name.length === 0,\n    email: ValidateEmail(email),\n    password: password.length < 8\n  };\n}\n\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleBlur = field => evt => {\n      this.setState({\n        touched: { ...this.state.touched,\n          [field]: true\n        }\n      });\n    };\n\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      userType: 'doctor',\n      touched: {\n        name: false,\n        email: false,\n        password: false\n      }\n    };\n    this.onChangename = this.onChangename.bind(this);\n    this.onChangeemail = this.onChangeemail.bind(this);\n    this.onChangepassword = this.onChangepassword.bind(this);\n    this.onChangeuserType = this.onChangeuserType.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onChangename(e) {\n    this.setState({\n      name: e.target.value\n    });\n  }\n\n  onChangeemail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  onChangepassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  onChangeuserType(e) {\n    this.setState({\n      userType: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    console.log(`Form submitted:`);\n    console.log(`name: ${this.state.name}`);\n    console.log(`Email: ${this.state.email}`);\n    console.log(`Password: ${this.state.password}`);\n    console.log(`userType: ${this.state.userType}`);\n    const user = {\n      name: this.state.name,\n      email: this.state.email,\n      password: this.state.password,\n      userType: this.state.userType\n    };\n    console.log(user);\n    axios.post('http://localhost:4000/register', user).then(res => {\n      console.log(res.data);\n\n      if (res.data === \"success\") {\n        alert(\"User Created Successfuly\");\n      } else {\n        alert(res.data);\n      }\n    });\n    this.setState({\n      name: '',\n      email: '',\n      password: '',\n      userTpye: 'doctor',\n      touched: {\n        name: false,\n        email: false,\n        password: false\n      }\n    });\n  }\n\n  render() {\n    const errors = validate(this.state.name, this.state.email, this.state.password);\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\n\n    const shouldMarkError = field => {\n      const hasError = errors[field];\n      const shouldShow = this.state.touched[field];\n      return hasError ? shouldShow : false;\n    };\n\n    const userAlreadyExists = verify(this.state.email);\n    return React.createElement(\"div\", {\n      style: {\n        marginTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"Create New User\"), React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Full Name: \"), React.createElement(\"input\", {\n      type: \"text\",\n      className: shouldMarkError(\"name\") ? \"form-control is-invalid\" : \"form-control\",\n      value: this.state.name,\n      pattern: \"[A-Za-z]*\",\n      title: \"only valid alphabatic letters\",\n      onChange: this.onChangename,\n      onBlur: this.handleBlur(\"name\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }), shouldMarkError(\"name\") ? React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"Please provide a valid Name.\") : \"\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"Email: \"), React.createElement(\"input\", {\n      type: \"text\",\n      className: shouldMarkError(\"email\") ? \"form-control is-invalid\" : \"form-control\",\n      value: this.state.email,\n      onChange: this.onChangeemail,\n      onBlur: this.handleBlur(\"email\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }), shouldMarkError(\"email\") ? React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, \"Please provide a valid email.\") : \"\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, \"Password: \"), React.createElement(\"input\", {\n      type: \"password\",\n      className: shouldMarkError(\"password\") ? \"form-control is-invalid\" : \"form-control\",\n      value: this.state.password,\n      onChange: this.onChangepassword,\n      onBlur: this.handleBlur(\"password\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }), shouldMarkError(\"password\") ? React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, \"Password should meet the minimum length of 8 Characters.\") : \"\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, \"Choose a userType:\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      value: this.state.userTpye,\n      onChange: this.onChangeuserType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"doctor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, \"Doctor\"), React.createElement(\"option\", {\n      value: \"doctor assistant\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, \"Doctor Assistant\"), React.createElement(\"option\", {\n      value: \"lab staff\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, \"Lab Staff\"), React.createElement(\"option\", {\n      value: \"admin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, \"Admin\"))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      disabled: isDisabled,\n      value: \"Create User\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/test1/front-end/src/components/component-register-user.js"],"names":["React","Component","axios","verify","email","get","params","then","res","console","log","data","EmailNameInUse","ValidateEmail","mail","flag","mailformat","match","validate","name","password","length","Register","constructor","props","handleBlur","field","evt","setState","touched","state","userType","onChangename","bind","onChangeemail","onChangepassword","onChangeuserType","onSubmit","e","target","value","preventDefault","user","post","alert","userTpye","render","errors","isDisabled","Object","keys","some","x","shouldMarkError","hasError","shouldShow","userAlreadyExists","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\n/*async function ValidateEmail(mail) \r\n{\r\n    //console.log(\"RUNNING VALIDATE EMAIL\");\r\n    var flag = true;\r\n    var mailformat = /^\\w+([\\.-]?\\w+)@\\w+([\\.-]?\\w+)(\\.\\w{2,3})+$/;\r\n    if(mail.match(mailformat))\r\n    {\r\n        \r\n        const user= {\r\n            email:mail\r\n        }\r\n        console.log(mail);\r\n        \r\n        await axios.get('http://localhost:4000/mailcheck',{ params: {email: mail}})\r\n            .then(res => {\r\n                console.log(\"here\",res.data.EmailNameInUse);\r\n                //flag = res.data.EmailNameInUse;\r\n                return false;\r\n            });\r\n            \r\n        return false;       \r\n    }\r\n    else\r\n    {\r\n    //flag =  true;\r\n    return true;\r\n    }\r\n\r\n    //return flag;\r\n}*/\r\n\r\nasync function verify(email){\r\n\r\n    await axios.get('http://localhost:4000/mailcheck',{ params: {email: email}})\r\n            .then(res => {\r\n                console.log(\"here in verify axios\",res.data.EmailNameInUse);\r\n                return res.data.EmailNameInUse;\r\n            });\r\n\r\n}\r\n\r\nfunction ValidateEmail(mail) \r\n{\r\n    var flag = false;\r\n    var mailformat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n    if(mail.match(mailformat))\r\n    {        \r\n        console.log(\"here in if\",flag)\r\n        console.log(mail);\r\n        return flag;\r\n    }\r\n    else\r\n    {\r\n        flag=true;\r\n        console.log(mail);\r\n        console.log(\"here in else\",flag)\r\n        return flag;\r\n    }\r\n}\r\n\r\nfunction validate(name,email, password) {\r\n    // true means invalid, so our conditions got reversed\r\n    return {\r\n      name: name.length===0,\r\n      email: ValidateEmail(email),\r\n      password: password.length < 8\r\n    };\r\n}\r\n\r\nexport default class Register extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n            userType: 'doctor',\r\n\r\n            touched: {\r\n                name: false,\r\n                email: false,\r\n                password: false,\r\n              }\r\n        }\r\n        this.onChangename = this.onChangename.bind(this);\r\n        this.onChangeemail = this.onChangeemail.bind(this);\r\n        this.onChangepassword = this.onChangepassword.bind(this);\r\n        this.onChangeuserType = this.onChangeuserType.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    \r\n\r\n    onChangename(e) {\r\n        this.setState({\r\n            name: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeemail(e) {\r\n        this.setState({\r\n            email: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangepassword(e) {\r\n        this.setState({\r\n            password: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeuserType(e) {\r\n        this.setState({\r\n            userType: e.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        \r\n        console.log(`Form submitted:`);\r\n        console.log(`name: ${this.state.name}`);\r\n        console.log(`Email: ${this.state.email}`);\r\n        console.log(`Password: ${this.state.password}`);\r\n        console.log(`userType: ${this.state.userType}`);\r\n\r\n        const user= {\r\n            name:this.state.name,\r\n            email:this.state.email,\r\n            password:this.state.password,\r\n            userType:this.state.userType\r\n        }\r\n\r\n        console.log(user)\r\n        \r\n        axios.post('http://localhost:4000/register', user)\r\n            .then(res => {\r\n                console.log(res.data);\r\n                if(res.data===\"success\")\r\n                {\r\n                    alert(\"User Created Successfuly\");\r\n                }\r\n                else\r\n                {\r\n                    alert(res.data);\r\n                }\r\n            });\r\n\r\n        this.setState({\r\n            name:'',\r\n            email: '',\r\n            password: '',\r\n            userTpye:'doctor',\r\n\r\n            touched: {\r\n                name: false,\r\n                email: false,\r\n                password: false,\r\n              }\r\n        });\r\n    }\r\n\r\n\r\n\r\n      handleBlur = (field) => (evt) => {\r\n        this.setState({\r\n          touched: { ...this.state.touched, [field]: true },\r\n        });\r\n      }\r\n\r\n\r\n\r\n    render() {\r\n        const errors = validate(this.state.name,this.state.email, this.state.password);\r\n        const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n\r\n        const shouldMarkError = field => {\r\n            const hasError = errors[field];\r\n            const shouldShow = this.state.touched[field];\r\n      \r\n            return hasError ? shouldShow : false;\r\n          };\r\n\r\n        const userAlreadyExists = verify(this.state.email);\r\n\r\n        return (\r\n            <div style={{marginTop: 10}}>\r\n                <h3>Create New User</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\"> \r\n                        <label>Full Name: </label>\r\n                        <input  type=\"text\"\r\n                                className={shouldMarkError(\"name\") ? \"form-control is-invalid\" : \"form-control\"}\r\n                                value={this.state.name}\r\n                                pattern=\"[A-Za-z]*\" title=\"only valid alphabatic letters\"\r\n                                onChange={this.onChangename}\r\n                                onBlur={this.handleBlur(\"name\")}\r\n                                />\r\n                                {shouldMarkError(\"name\") ?\r\n                                <div className=\"invalid-feedback\">\r\n                                    Please provide a valid Name.\r\n                                </div>\r\n                                :\"\"}\r\n                    </div>\r\n                    \r\n                    <div className=\"form-group\">\r\n                    <label>Email: </label>\r\n                    <input \r\n                            type=\"text\" \r\n                            className={shouldMarkError(\"email\") ? \"form-control is-invalid\" : \"form-control\"}\r\n                            value={this.state.email}\r\n                            onChange={this.onChangeemail}\r\n                            onBlur={this.handleBlur(\"email\")}\r\n                            />\r\n\r\n                            {shouldMarkError(\"email\") ?\r\n                            <div className=\"invalid-feedback\">\r\n                                Please provide a valid email.\r\n                            </div>\r\n                            :\"\"}\r\n        \r\n                            \r\n                    </div>\r\n                    \r\n\r\n                    \r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Password: </label>\r\n                        <input \r\n                                type=\"password\" \r\n                                className={shouldMarkError(\"password\") ? \"form-control is-invalid\" : \"form-control\"}\r\n                                value={this.state.password}\r\n                                onChange={this.onChangepassword}\r\n                                onBlur={this.handleBlur(\"password\")}\r\n                                />\r\n                                {shouldMarkError(\"password\") ?\r\n                                <div className=\"invalid-feedback\">\r\n                                    Password should meet the minimum length of 8 Characters.\r\n                                </div>\r\n                                :\"\"}\r\n                    </div>\r\n\r\n                    <div>\r\n                    <label >Choose a userType:</label>\r\n                        <br></br>\r\n                        <select value={this.state.userTpye} onChange={this.onChangeuserType}>\r\n                        <option value=\"doctor\">Doctor</option>\r\n                        <option value=\"doctor assistant\">Doctor Assistant</option>\r\n                        <option value=\"lab staff\">Lab Staff</option>\r\n                        <option value=\"admin\">Admin</option>\r\n                        </select>\r\n                        \r\n                  </div>\r\n                  <br></br>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" disabled={isDisabled} value=\"Create User\" className=\"btn btn-primary\" />\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}