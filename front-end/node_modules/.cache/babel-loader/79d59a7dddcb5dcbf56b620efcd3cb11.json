{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\test1\\\\front-end\\\\src\\\\components\\\\component-add-prescription.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nfunction Validatephone(contact) {\n  //    var mailformat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n  var phoneno = /^\\+?([0-9]{12})\\)?$/;\n\n  if (contact.match(phoneno)) {\n    return false;\n  } else {\n    return true;\n  }\n}\n\nfunction validate(contact) {\n  // true means invalid, so our conditions got reversed\n  return {\n    contact: Validatephone(contact)\n  };\n}\n\nfunction createNameElement(contact) {\n  if (!Validatephone(contact)) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Hello!\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Good to see you here.\"));\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"\\\"sorry\\\"\");\n  }\n}\n\nexport default class AddPrescription extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleBlur = field => evt => {\n      this.setState({\n        touched: { ...this.state.touched,\n          [field]: true\n        }\n      });\n    };\n\n    this.state = {\n      contact: '',\n      prescriptions: [],\n      touched: {\n        contact: false\n      }\n    };\n    this.onChangecontact = this.onChangecontact.bind(this);\n  }\n\n  onChangecontact(e) {\n    this.setState({\n      contact: e.target.value\n    });\n  }\n\n  render() {\n    const errors = validate(this.state.contact);\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\n\n    const shouldMarkError = field => {\n      const hasError = errors[field];\n      const shouldShow = this.state.touched[field];\n      return hasError ? shouldShow : false;\n    };\n\n    const nameElement = createNameElement(this.state.contact);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Contact: \"), React.createElement(\"input\", {\n      type: \"text\",\n      className: shouldMarkError(\"contact\") ? \"form-control is-invalid\" : \"form-control\",\n      value: this.state.contact,\n      onChange: this.onChangecontact,\n      onBlur: this.handleBlur(\"contact\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), shouldMarkError(\"contact\") ? React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Please provide a valid contact like +921112223456.\") : \"\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, nameElement));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/test1/front-end/src/components/component-add-prescription.js"],"names":["React","Component","axios","Validatephone","contact","phoneno","match","validate","createNameElement","AddPrescription","constructor","props","handleBlur","field","evt","setState","touched","state","prescriptions","onChangecontact","bind","e","target","value","render","errors","isDisabled","Object","keys","some","x","shouldMarkError","hasError","shouldShow","nameElement"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Validatephone(contact) \r\n{\r\n//    var mailformat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n    var phoneno = /^\\+?([0-9]{12})\\)?$/;\r\n    if(contact.match(phoneno))\r\n    {\r\n    return false;\r\n    }\r\n    else\r\n    {\r\n    return true;\r\n    }\r\n}\r\n\r\nfunction validate(contact) {\r\n    // true means invalid, so our conditions got reversed\r\n    return {\r\n      contact: Validatephone(contact),\r\n    };\r\n}\r\n\r\nfunction createNameElement(contact)\r\n{\r\n    if(!Validatephone(contact))\r\n    {\r\n        return (\r\n            <div>\r\n                <h1>Hello!</h1>\r\n                <h2>Good to see you here.</h2>\r\n            </div>\r\n            );\r\n    }\r\n    else\r\n    {\r\n        return (\r\n            <div>\r\n                \"sorry\"\r\n            </div>\r\n            );\r\n    }\r\n}\r\n\r\nexport default class AddPrescription extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            contact: '',\r\n            prescriptions : [],\r\n            touched: {\r\n                contact: false,\r\n              }\r\n            \r\n        }\r\n        this.onChangecontact = this.onChangecontact.bind(this);\r\n\r\n    }\r\n    onChangecontact(e) {\r\n        this.setState({\r\n            contact: e.target.value\r\n        });\r\n    }\r\n\r\n    handleBlur = (field) => (evt) => {\r\n        this.setState({\r\n          touched: { ...this.state.touched, [field]: true },\r\n        });\r\n      } \r\n\r\n\r\n    render() {\r\n\r\n        const errors = validate(this.state.contact);\r\n        const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n\r\n        const shouldMarkError = field => {\r\n            const hasError = errors[field];\r\n            const shouldShow = this.state.touched[field];\r\n      \r\n            return hasError ? shouldShow : false;\r\n          };\r\n    \r\n\r\n            \r\n        const nameElement = createNameElement(this.state.contact);\r\n              \r\n\r\n        return (\r\n            <div>\r\n                <div className=\"form-group\">\r\n                    <label>Contact: </label>\r\n                    <input \r\n                            type=\"text\" \r\n                            className={shouldMarkError(\"contact\") ? \"form-control is-invalid\" : \"form-control\"}\r\n                            value={this.state.contact}\r\n                            onChange={this.onChangecontact}\r\n                            onBlur={this.handleBlur(\"contact\")}\r\n                            />\r\n                            {shouldMarkError(\"contact\") ?\r\n                                <div className=\"invalid-feedback\">\r\n                                    Please provide a valid contact like +921112223456.\r\n                                </div>\r\n                            :\"\"}\r\n\r\n                </div>\r\n\r\n\r\n                <div>\r\n                {nameElement}\r\n                </div>\r\n\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}