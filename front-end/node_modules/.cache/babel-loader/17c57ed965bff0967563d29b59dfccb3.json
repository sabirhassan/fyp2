{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\test1\\\\front-end\\\\src\\\\components\\\\component-medicines.js\";\nimport React, { Component } from 'react';\nimport { Datatable } from \"@o2xp/react-datatable\";\nimport axios from 'axios';\nimport DatePicker from 'react-date-picker';\nimport { FreeBreakfast as CoffeeIcon, CallSplit as CallSplitIcon } from \"@material-ui/icons\";\nimport { chunk } from \"lodash\";\nconst options = {\n  title: \"My super datatable\",\n  dimensions: {\n    datatable: {\n      width: \"90%\",\n      height: \"40%\"\n    },\n    row: {\n      height: \"48px\"\n    }\n  },\n  keyColumn: \"id\",\n  font: \"Arial\",\n  data: {\n    columns: [{\n      id: \"id\",\n      label: \"id\",\n      colSize: \"150px\",\n      editable: false\n    }, {\n      id: \"name\",\n      label: \"name\",\n      colSize: \"100px\",\n      editable: true,\n      dataType: \"text\",\n      inputType: \"input\"\n    }, {\n      id: \"age\",\n      label: \"age\",\n      colSize: \"80px\",\n      editable: true,\n      dataType: \"number\",\n      valueVerification: val => {\n        let error = val > 100 ? true : false;\n        let message = val > 100 ? \"Value is too big\" : \"\";\n        return {\n          error: error,\n          message: message\n        };\n      }\n    }, {\n      id: \"adult\",\n      label: \"adult\",\n      colSize: \"50px\",\n      editable: true,\n      dataType: \"boolean\",\n      inputType: \"checkbox\"\n    }, {\n      id: \"birthDate\",\n      label: \"birth date\",\n      colSize: \"120px\",\n      editable: true,\n      dataType: \"date\",\n      inputType: \"datePicker\",\n      dateFormat: \"YYYY-MM-DDTHH:MM:ss\"\n    }, {\n      id: \"color\",\n      label: \"color\",\n      colSize: \"100px\",\n      editable: true,\n      inputType: \"select\",\n      values: [\"green\", \"blue\", \"brown\"]\n    }],\n    rows: [{\n      id: \"50cf\",\n      age: 28,\n      name: \"Kerr Mayo\",\n      adult: true,\n      birthDate: \"1972-09-04T11:09:59\",\n      color: \"green\"\n    }, {\n      id: \"209\",\n      age: 34,\n      name: \"Freda Bowman\",\n      adult: true,\n      birthDate: \"1988-03-14T09:03:19\",\n      color: \"blue\"\n    }, {\n      id: \"2dd81ef\",\n      age: 14,\n      name: \"Becky Lawrence\",\n      adult: false,\n      birthDate: \"1969-02-10T04:02:44\",\n      color: \"green\"\n    }]\n  },\n  features: {\n    canEdit: true,\n    canDelete: true,\n    canSearch: true,\n    canOrderColumns: true,\n    canSelectRow: true,\n    rowsPerPage: {\n      available: [10, 25, 50, 100],\n      selected: 50\n    },\n    additionalIcons: [{\n      title: \"Coffee\",\n      icon: React.createElement(CoffeeIcon, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }),\n      onClick: () => alert(\"Coffee Time!\")\n    }],\n    selectionIcons: [{\n      title: \"Selected Rows\",\n      icon: React.createElement(CallSplitIcon, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }),\n      onClick: rows => console.log(rows)\n    }]\n  }\n};\nexport default class medicineList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.actionsRow = ({\n      type,\n      payload\n    }) => {\n      console.log(type);\n      console.log(payload);\n    };\n\n    this.refreshRows = () => {\n      const {\n        rows\n      } = options.data;\n      const randomRows = Math.floor(Math.random() * rows.length) + 1;\n      const randomTime = Math.floor(Math.random() * 4000) + 1000;\n      const randomResolve = Math.floor(Math.random() * 10) + 1;\n      return new Promise((resolve, reject) => {\n        setTimeout(() => {\n          if (randomResolve > 3) {\n            resolve(chunk(rows, randomRows)[0]);\n          }\n\n          reject(new Error(\"err\"));\n        }, randomTime);\n      });\n    };\n\n    this.state = {};\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        marginTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Medicine List\"), React.createElement(Datatable, {\n      options: options,\n      refreshRows: this.refreshRows,\n      actions: this.actionsRow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/test1/front-end/src/components/component-medicines.js"],"names":["React","Component","Datatable","axios","DatePicker","FreeBreakfast","CoffeeIcon","CallSplit","CallSplitIcon","chunk","options","title","dimensions","datatable","width","height","row","keyColumn","font","data","columns","id","label","colSize","editable","dataType","inputType","valueVerification","val","error","message","dateFormat","values","rows","age","name","adult","birthDate","color","features","canEdit","canDelete","canSearch","canOrderColumns","canSelectRow","rowsPerPage","available","selected","additionalIcons","icon","onClick","alert","selectionIcons","console","log","medicineList","constructor","props","actionsRow","type","payload","refreshRows","randomRows","Math","floor","random","length","randomTime","randomResolve","Promise","resolve","reject","setTimeout","Error","state","render","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {Datatable} from \"@o2xp/react-datatable\";\r\nimport axios from 'axios';\r\nimport DatePicker from 'react-date-picker';\r\nimport {\r\n    FreeBreakfast as CoffeeIcon,\r\n    CallSplit as CallSplitIcon\r\n  } from \"@material-ui/icons\";\r\n  import { chunk } from \"lodash\";\r\n\r\nconst options = {\r\n    title: \"My super datatable\",\r\n    dimensions: {\r\n      datatable: {\r\n        width: \"90%\",\r\n        height: \"40%\"\r\n      },\r\n      row: {\r\n        height: \"48px\"\r\n      }\r\n    },\r\n    keyColumn: \"id\",\r\n    font: \"Arial\",\r\n    data: {\r\n      columns: [\r\n        {\r\n          id: \"id\",\r\n          label: \"id\",\r\n          colSize: \"150px\",\r\n          editable: false\r\n        },\r\n        {\r\n          id: \"name\",\r\n          label: \"name\",\r\n          colSize: \"100px\",\r\n          editable: true,\r\n          dataType: \"text\",\r\n          inputType: \"input\"\r\n        },\r\n        {\r\n          id: \"age\",\r\n          label: \"age\",\r\n          colSize: \"80px\",\r\n          editable: true,\r\n          dataType: \"number\",\r\n          valueVerification: val => {\r\n            let error = val > 100 ? true : false;\r\n            let message = val > 100 ? \"Value is too big\" : \"\";\r\n            return {\r\n              error: error,\r\n              message: message\r\n            };\r\n          }\r\n        },\r\n        {\r\n          id: \"adult\",\r\n          label: \"adult\",\r\n          colSize: \"50px\",\r\n          editable: true,\r\n          dataType: \"boolean\",\r\n          inputType: \"checkbox\"\r\n        },\r\n        {\r\n          id: \"birthDate\",\r\n          label: \"birth date\",\r\n          colSize: \"120px\",\r\n          editable: true,\r\n          dataType: \"date\",\r\n          inputType: \"datePicker\",\r\n          dateFormat: \"YYYY-MM-DDTHH:MM:ss\"\r\n        },\r\n        {\r\n          id: \"color\",\r\n          label: \"color\",\r\n          colSize: \"100px\",\r\n          editable: true,\r\n          inputType: \"select\",\r\n          values: [\"green\", \"blue\", \"brown\"]\r\n        },\r\n      ],\r\n      rows: [\r\n        {\r\n          id: \"50cf\",\r\n          age: 28,\r\n          name: \"Kerr Mayo\",\r\n          adult: true,\r\n          birthDate: \"1972-09-04T11:09:59\",\r\n          color: \"green\",\r\n        },\r\n        {\r\n          id: \"209\",\r\n          age: 34,\r\n          name: \"Freda Bowman\",\r\n          adult: true,\r\n          birthDate: \"1988-03-14T09:03:19\",\r\n          color: \"blue\",\r\n        },\r\n        {\r\n          id: \"2dd81ef\",\r\n          age: 14,\r\n          name: \"Becky Lawrence\",\r\n          adult: false,\r\n          birthDate: \"1969-02-10T04:02:44\",\r\n          color: \"green\",\r\n        }\r\n      ]\r\n    },\r\n    features: {\r\n      canEdit: true,\r\n      canDelete: true,\r\n      canSearch: true,\r\n      canOrderColumns: true,\r\n      canSelectRow: true,\r\n      rowsPerPage: {\r\n        available: [10, 25, 50, 100],\r\n        selected: 50\r\n      },\r\n      additionalIcons: [\r\n        {\r\n          title: \"Coffee\",\r\n          icon: <CoffeeIcon color=\"primary\" />,\r\n          onClick: () => alert(\"Coffee Time!\")\r\n        }\r\n      ],\r\n      selectionIcons: [\r\n        {\r\n          title: \"Selected Rows\",\r\n          icon: <CallSplitIcon color=\"primary\" />,\r\n          onClick: rows => console.log(rows)\r\n        }\r\n      ]\r\n    }\r\n  };\r\n\r\n\r\nexport default class medicineList extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        }\r\n\r\n    }\r\n    \r\n            actionsRow = ({ type, payload }) => {\r\n            console.log(type);\r\n            console.log(payload);\r\n          };\r\n        \r\n          refreshRows = () => {\r\n            const { rows } = options.data;\r\n            const randomRows = Math.floor(Math.random() * rows.length) + 1;\r\n            const randomTime = Math.floor(Math.random() * 4000) + 1000;\r\n            const randomResolve = Math.floor(Math.random() * 10) + 1;\r\n            return new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                if (randomResolve > 3) {\r\n                  resolve(chunk(rows, randomRows)[0]);\r\n                }\r\n                reject(new Error(\"err\"));\r\n              }, randomTime);\r\n            });\r\n          };\r\n\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div style={{marginTop: 10}}>\r\n                <h3>Medicine List</h3>\r\n                \r\n                <Datatable\r\n                options={options}\r\n                refreshRows={this.refreshRows}\r\n                actions={this.actionsRow}\r\n              />\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}