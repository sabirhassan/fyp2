{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\test1\\\\front-end\\\\src\\\\components\\\\component-see-prescription.js\";\nimport React, { Component } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport axios from 'axios';\nimport '../css/medicine.css';\n\nfunction Validatephone(contact) {\n  //    var mailformat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n  var phoneno = /^\\+?([0-9]{12})\\)?$/;\n\n  if (contact.match(phoneno)) {\n    return false;\n  } else {\n    return true;\n  }\n}\n\nfunction validate(contact) {\n  // true means invalid, so our conditions got reversed\n  return {\n    contact: Validatephone(contact)\n  };\n}\n\nexport default class SeePrescription extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleBlur = field => evt => {\n      this.setState({\n        touched: { ...this.state.touched,\n          [field]: true\n        }\n      });\n    };\n\n    this.state = {\n      contact: '',\n      prescription: [],\n      checkPrescription: false,\n      touched: {\n        contact: false\n      }\n    };\n    this.onChangecontact = this.onChangecontact.bind(this);\n  }\n\n  onChangecontact(e) {\n    this.setState({\n      contact: e.target.value,\n      checkPrescription: true,\n      prescription: []\n    });\n  }\n\n  render() {\n    const errors = validate(this.state.contact);\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\n\n    const shouldMarkError = field => {\n      const hasError = errors[field];\n      const shouldShow = this.state.touched[field];\n      return hasError ? shouldShow : false;\n    };\n\n    const createTableElement = () => {\n      if (!Validatephone(this.state.contact) && this.state.checkPrescription) {\n        const user = {\n          contact: this.state.contact\n        };\n        const promise1 = new Promise(function (resolve, reject) {\n          axios.post('http://localhost:4000/getPrescription', user).then(res => {\n            resolve(res.data);\n          });\n        });\n        promise1.then(value => {\n          console.log(value);\n          if (value != \"empty\") this.setState({\n            prescription: value,\n            checkPrescription: false\n          });\n        });\n      }\n\n      if (this.state.prescription.length > 0) {\n        return this.state.prescription.map((item, index) => {\n          const {\n            contact,\n            doctor,\n            date,\n            medicine,\n            dosage,\n            days,\n            morning,\n            afternoon,\n            evening,\n            instructions,\n            status,\n            notify\n          } = item;\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107\n            },\n            __self: this\n          }, React.createElement(Table, {\n            striped: true,\n            bordered: true,\n            hover: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108\n            },\n            __self: this\n          }, React.createElement(\"thead\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109\n            },\n            __self: this\n          }, React.createElement(\"tr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110\n            },\n            __self: this\n          }, React.createElement(\"th\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111\n            },\n            __self: this\n          }, \"prescription #\", index))), React.createElement(\"tbody\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114\n            },\n            __self: this\n          }, React.createElement(\"tr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116\n            },\n            __self: this\n          }, \"contact:\", contact), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117\n            },\n            __self: this\n          }, \"doctor:\", doctor), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118\n            },\n            __self: this\n          }, \"date:\", date), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119\n            },\n            __self: this\n          }, \"medicine:\", medicine), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 120\n            },\n            __self: this\n          }, \"dosage: \", dosage), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121\n            },\n            __self: this\n          }, \"days: \", days), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122\n            },\n            __self: this\n          }, morning ? \"morning\" : \"\"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123\n            },\n            __self: this\n          }, afternoon ? \"afternoon\" : \"\"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124\n            },\n            __self: this\n          }, evening ? \"evening\" : \"\"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125\n            },\n            __self: this\n          }, \"instructions:\", instructions), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126\n            },\n            __self: this\n          }, \"Current:\", status ? \"True\" : \"False\")))));\n        });\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        });\n      }\n    };\n\n    const tableElement = createTableElement();\n    return React.createElement(\"div\", {\n      className: \"popup2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Contact: \"), React.createElement(\"input\", {\n      type: \"text\",\n      className: shouldMarkError(\"contact\") ? \"form-control is-invalid\" : \"form-control\",\n      value: this.state.contact,\n      onChange: this.onChangecontact,\n      onBlur: this.handleBlur(\"contact\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), shouldMarkError(\"contact\") ? React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Please provide a valid contact like +921112223456.\") : \"\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, tableElement)));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/test1/front-end/src/components/component-see-prescription.js"],"names":["React","Component","Table","axios","Validatephone","contact","phoneno","match","validate","SeePrescription","constructor","props","handleBlur","field","evt","setState","touched","state","prescription","checkPrescription","onChangecontact","bind","e","target","value","render","errors","isDisabled","Object","keys","some","x","shouldMarkError","hasError","shouldShow","createTableElement","user","promise1","Promise","resolve","reject","post","then","res","data","console","log","length","map","item","index","doctor","date","medicine","dosage","days","morning","afternoon","evening","instructions","status","notify","tableElement"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Table from 'react-bootstrap/Table'\r\nimport axios from 'axios';\r\nimport '../css/medicine.css';\r\n\r\nfunction Validatephone(contact) \r\n{\r\n//    var mailformat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n    var phoneno = /^\\+?([0-9]{12})\\)?$/;\r\n    if(contact.match(phoneno))\r\n    {\r\n    return false;\r\n    }\r\n    else\r\n    {\r\n    return true;\r\n    }\r\n}\r\n\r\nfunction validate(contact) {\r\n    // true means invalid, so our conditions got reversed\r\n    return {\r\n       contact: Validatephone(contact),\r\n    };\r\n}\r\n\r\nexport default class SeePrescription extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            contact: '',\r\n            prescription:[],\r\n            checkPrescription:false,\r\n            touched: {\r\n                contact: false,\r\n              }\r\n            \r\n        }\r\n        this.onChangecontact = this.onChangecontact.bind(this);     \r\n    }\r\n    onChangecontact(e) {\r\n        this.setState({\r\n            contact: e.target.value,\r\n            checkPrescription:true,\r\n            prescription:[]\r\n        });\r\n    }\r\n\r\n\r\n\r\n     \r\n    handleBlur = (field) => (evt) => {\r\n        this.setState({\r\n          touched: { ...this.state.touched, [field]: true },\r\n        });\r\n      }\r\n\r\n\r\n      render() {\r\n\r\n        const errors = validate(this.state.contact);\r\n        const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n\r\n        \r\n        const shouldMarkError = field => {\r\n            const hasError = errors[field];\r\n            const shouldShow = this.state.touched[field];      \r\n            return hasError ? shouldShow : false;\r\n          };\r\n    \r\n\r\n        const createTableElement = () => {\r\n\r\n            if(!Validatephone(this.state.contact) && this.state.checkPrescription)\r\n            {\r\n            \r\n                const user= {\r\n                    contact:this.state.contact,\r\n                }\r\n\r\n                const promise1 = new Promise(function(resolve, reject) {\r\n                    \r\n                    axios.post('http://localhost:4000/getPrescription', user)\r\n                    .then(res => {\r\n                        resolve(res.data)\r\n                    });\r\n                });\r\n                \r\n                promise1.then((value) =>{\r\n                    console.log(value);\r\n                    if(value!=\"empty\")\r\n                    this.setState({\r\n                        prescription: value,\r\n                        checkPrescription:false,\r\n                    });\r\n                });\r\n            \r\n            }\r\n\r\n            if(this.state.prescription.length>0)\r\n            {\r\n                return this.state.prescription.map((item, index) => {\r\n                    const { contact,doctor, date, medicine, dosage,days, morning,afternoon,evening, instructions,status,notify  } = item \r\n                    return (\r\n     \r\n                        <div >\r\n                        <Table striped bordered hover >\r\n                        <thead>\r\n                            <tr>\r\n                                <th>prescription #{index}</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        <tr>\r\n                            <td >contact:{contact}</td>\r\n                            <td >doctor:{doctor}</td>\r\n                            <td >date:{date}</td>\r\n                            <td >medicine:{medicine}</td>\r\n                            <td >dosage: {dosage}</td>\r\n                            <td >days: {days}</td>\r\n                            <td >{morning?\"morning\":\"\"}</td>\r\n                            <td >{afternoon?\"afternoon\":\"\"}</td>\r\n                            <td >{evening?\"evening\":\"\"}</td>\r\n                            <td >instructions:{instructions}</td>\r\n                            <td >Current:{status?\"True\":\"False\"}</td>\r\n                            \r\n                        </tr>\r\n\r\n                        </tbody>\r\n                        </Table>\r\n                        </div>\r\n                    )\r\n                 })            \r\n            }\r\n            else\r\n            {\r\n                return (\r\n                    <div>\r\n                    </div>\r\n                    );\r\n            }\r\n        }\r\n\r\n     \r\n        const tableElement = createTableElement() \r\n\r\n        return (\r\n            <div className=\"popup2\">\r\n                <div className=\"content\">\r\n                    <div >\r\n                    <label>Contact: </label>\r\n                    <input \r\n                            type=\"text\" \r\n                            className={shouldMarkError(\"contact\") ? \"form-control is-invalid\" : \"form-control\"}\r\n                            value={this.state.contact}\r\n                            onChange={this.onChangecontact}\r\n                            onBlur={this.handleBlur(\"contact\")}\r\n                            />\r\n                            {shouldMarkError(\"contact\") ?\r\n                                <div className=\"invalid-feedback\">\r\n                                    Please provide a valid contact like +921112223456.\r\n                                </div>\r\n                            :\"\"}\r\n\r\n                    </div>\r\n\r\n\r\n                <div>\r\n                {tableElement}\r\n                </div>\r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}