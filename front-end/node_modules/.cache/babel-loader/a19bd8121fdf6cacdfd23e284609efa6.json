{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\test1\\\\front-end\\\\src\\\\components\\\\component-add-prescription.js\";\nimport React, { Component } from 'react';\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport Table from 'react-bootstrap/Table';\nimport axios from 'axios';\n\nfunction Validatephone(contact) {\n  //    var mailformat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n  var phoneno = /^\\+?([0-9]{12})\\)?$/;\n\n  if (contact.match(phoneno)) {\n    return false;\n  } else {\n    return true;\n  }\n}\n\nfunction validate(contact, prescription) {\n  // true means invalid, so our conditions got reversed\n  return {\n    prescription: prescription.length == 0,\n    contact: Validatephone(contact)\n  };\n}\n\nexport default class AddPrescription extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleBlur = field => evt => {\n      this.setState({\n        touched: { ...this.state.touched,\n          [field]: true\n        }\n      });\n    };\n\n    this.state = {\n      contact: '',\n      name: '',\n      nameList: [],\n      checkName: true,\n      doctor: '',\n      doctorList: [],\n      checkdoctor: true,\n      showdoctor: false,\n      showMedicine: false,\n      medicine: '',\n      dosage: '',\n      timings: [],\n      instructions: '',\n      prescriptions: [],\n      touched: {\n        contact: false\n      }\n    };\n    this.onChangecontact = this.onChangecontact.bind(this);\n    this.onChangename = this.onChangename.bind(this);\n    this.onChangedoctor = this.onChangedoctor.bind(this);\n    this.onChangemedicine = this.onChangemedicine.bind(this);\n    this.onChangedosage = this.onChangedosage.bind(this);\n    this.onChangeinstructions = this.onChangeinstructions.bind(this);\n    this.handleSubmitAdd = this.handleSubmitAdd.bind(this);\n    this.onSelect = this.onSelect.bind(this);\n    this.onRemove = this.onRemove.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onChangecontact(e) {\n    this.setState({\n      contact: e.target.value,\n      nameList: [],\n      checkName: true\n    });\n  }\n\n  onChangename(e) {\n    this.setState({\n      name: e.target.value\n    });\n  }\n\n  onChangedoctor(e) {\n    this.setState({\n      doctor: e.target.value\n    });\n  }\n\n  onChangemedicine(e) {\n    this.setState({\n      medicine: e.target.value\n    });\n  }\n\n  onChangedosage(e) {\n    this.setState({\n      dosage: e.target.value\n    });\n  }\n\n  onChangeinstructions(e) {\n    this.setState({\n      instructions: e.target.value\n    });\n  }\n\n  onSelect(selectedList, selectedItem) {\n    this.state.timings.push(selectedItem.name);\n  }\n\n  onRemove(selectedList, removedItem) {\n    for (var i = 0; i < this.state.timings.length; i++) {\n      if (this.state.timings[i] === removedItem.name) {\n        this.state.timings.splice(i, 1);\n      }\n    }\n  }\n\n  handleSubmitAdd(e) {\n    e.preventDefault();\n    console.log(this.state.medicine, this.state.dosage, this.state.timings, this.state.instructions);\n    var morning = false;\n    var afternoon = false;\n    var evening = false;\n\n    for (var i = 0; i < this.state.timings.length; i++) {\n      switch (this.state.timings[i]) {\n        case morning:\n          morning = true;\n\n        case noon:\n          afternoon = true;\n\n        case evening:\n          evening = true;\n      }\n    }\n\n    const item = {\n      medicine: this.state.medicine,\n      dosage: this.state.dosage,\n      morning: morning,\n      afternoon: afternoon,\n      evening: evening,\n      timings: this.state.timings,\n      instructions: this.state.instructions\n    };\n    this.state.prescriptions.push(item);\n    console.log(this.state.prescriptions);\n    this.setState({\n      medicine: '',\n      dosage: '',\n      instructions: ''\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const obj = {\n      contact: this.state.contact,\n      name: this.state.name,\n      doctor: this.state.doctor,\n      prescriptions: this.state.prescriptions\n    };\n    console.log(obj);\n    axios.post('http://localhost:4000/addPrescription', obj).then(res => {\n      console.log(res.data);\n\n      if (res.data === \"success\") {\n        alert(\"prescription added Successfuly\");\n        this.setState({\n          contact: '',\n          name: '',\n          nameList: [],\n          checkName: true,\n          doctor: '',\n          doctorList: [],\n          checkdoctor: true,\n          showdoctor: false,\n          showMedicine: false,\n          medicine: '',\n          dosage: '',\n          timings: [],\n          instructions: '',\n          prescriptions: [],\n          touched: {\n            contact: false\n          }\n        });\n      } else {\n        alert(res.data);\n      }\n    });\n  }\n\n  render() {\n    const errors = validate(this.state.contact, this.state.prescriptions);\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\n\n    const shouldMarkError = field => {\n      const hasError = errors[field];\n      const shouldShow = this.state.touched[field];\n      return hasError ? shouldShow : false;\n    };\n\n    const createNameElement = () => {\n      if (!Validatephone(this.state.contact)) {\n        const user = {\n          contact: this.state.contact\n        };\n\n        if (this.state.checkName) {\n          // to stop useless api calls\n          const promise1 = new Promise(function (resolve, reject) {\n            axios.post('http://localhost:4000/getpatients', user).then(res => {\n              resolve(res.data);\n            });\n          });\n          promise1.then(value => {\n            if (value != \"empty\") this.setState({\n              nameList: value,\n              name: value[0],\n              checkName: false,\n              showdoctor: true,\n              showMedicine: true\n            });\n          });\n        }\n\n        if (this.state.nameList.length > 0) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 261\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 262\n            },\n            __self: this\n          }, \"Select Patient:\"), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 263\n            },\n            __self: this\n          }), React.createElement(\"select\", {\n            value: this.state.name,\n            onChange: this.onChangename,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 264\n            },\n            __self: this\n          }, this.state.nameList.map(n => React.createElement(\"option\", {\n            value: n,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 265\n            },\n            __self: this\n          }, n))));\n        } else {\n          return React.createElement(\"div\", {\n            className: \"invalid-feedback\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 274\n            },\n            __self: this\n          }, \"No patient exists with this contact.\");\n        }\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284\n          },\n          __self: this\n        });\n      }\n    };\n\n    const createDoctorElement = () => {\n      if (this.state.showdoctor) {\n        if (this.state.checkdoctor) {\n          // to stop useless api calls\n          const promise1 = new Promise(function (resolve, reject) {\n            axios.post('http://localhost:4000/getdoctors').then(res => {\n              resolve(res.data);\n            });\n          });\n          promise1.then(value => {\n            if (value != \"empty\") this.setState({\n              doctorList: value,\n              doctor: value[0],\n              checkdoctor: false\n            });\n          });\n        }\n\n        if (this.state.doctorList.length > 0) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 320\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 321\n            },\n            __self: this\n          }, \"Select Reference Doctor:\"), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 322\n            },\n            __self: this\n          }), React.createElement(\"select\", {\n            value: this.state.doctor,\n            onChange: this.onChangedoctor,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 323\n            },\n            __self: this\n          }, this.state.doctorList.map(n => React.createElement(\"option\", {\n            value: n,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 324\n            },\n            __self: this\n          }, n))));\n        } else {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 333\n            },\n            __self: this\n          });\n        }\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 342\n          },\n          __self: this\n        });\n      }\n    };\n\n    const createMedicineElement = () => {\n      const options = [{\n        name: 'morning ',\n        id: 1\n      }, {\n        name: 'noon ',\n        id: 2\n      }, {\n        name: 'evening ',\n        id: 3\n      }];\n\n      if (this.state.showMedicine) {\n        return React.createElement(\"div\", {\n          className: \"form-group\",\n          onSubmit: this.handleSubmitAdd,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 356\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 357\n          },\n          __self: this\n        }, \"Add Medicine\"), React.createElement(\"form\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 359\n          },\n          __self: this\n        }, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 360\n          },\n          __self: this\n        }), React.createElement(\"input\", {\n          type: \"text\",\n          placeholder: \"Medicine\",\n          required: true,\n          className: \"form-control\",\n          value: this.state.medicine,\n          onChange: this.onChangemedicine,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 361\n          },\n          __self: this\n        }), React.createElement(\"input\", {\n          type: \"text\",\n          placeholder: \"Dosage\",\n          required: true,\n          className: \"form-control\",\n          value: this.state.dosage,\n          onChange: this.onChangedosage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 371\n          },\n          __self: this\n        }), React.createElement(Multiselect, {\n          options: options // Options to display in the dropdown\n          ,\n          displayValue: \"name\" // Property name to display in the dropdown options\n          ,\n          placeholder: \"timings\",\n          onSelect: this.onSelect,\n          onRemove: this.onRemove,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 380\n          },\n          __self: this\n        }), React.createElement(\"textarea\", {\n          placeholder: \"Instructions\",\n          className: \"form-control\",\n          value: this.state.instructions,\n          onChange: this.onChangeinstructions,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 388\n          },\n          __self: this\n        }), React.createElement(\"input\", {\n          type: \"submit\",\n          value: \"Add\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 395\n          },\n          __self: this\n        })));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 411\n          },\n          __self: this\n        });\n      }\n    };\n\n    const remove = param => {\n      for (var i = 0; i < this.state.prescriptions.length; i++) {\n        if (this.state.prescriptions[i].medicine === param) {\n          this.state.prescriptions.splice(i, 1);\n        }\n      }\n    };\n\n    const createMedicineTable = () => {\n      return this.state.prescriptions.map((item, index) => {\n        const {\n          medicine,\n          dosage,\n          timings,\n          instructions\n        } = item;\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 431\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 432\n          },\n          __self: this\n        }, index), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 433\n          },\n          __self: this\n        }, medicine), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 434\n          },\n          __self: this\n        }, dosage), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 435\n          },\n          __self: this\n        }, timings), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 436\n          },\n          __self: this\n        }, instructions), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 437\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"#\",\n          onClick: () => remove(medicine),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 438\n          },\n          __self: this\n        }, \"x\")));\n      });\n    };\n\n    const nameElement = createNameElement(this.state.contact);\n    const doctorElement = createDoctorElement();\n    const medicineElement = createMedicineElement();\n    const medicineTable = createMedicineTable();\n    return React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    }, \"Contact: \"), React.createElement(\"input\", {\n      type: \"text\",\n      className: shouldMarkError(\"contact\") ? \"form-control is-invalid\" : \"form-control\",\n      value: this.state.contact,\n      onChange: this.onChangecontact,\n      onBlur: this.handleBlur(\"contact\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }), shouldMarkError(\"contact\") ? React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464\n      },\n      __self: this\n    }, \"Please provide a valid contact like +921112223456.\") : \"\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472\n      },\n      __self: this\n    }, nameElement), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478\n      },\n      __self: this\n    }, doctorElement), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483\n      },\n      __self: this\n    }, medicineElement), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488\n      },\n      __self: this\n    }, \"Medicine List\"), React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493\n      },\n      __self: this\n    }, \"#\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494\n      },\n      __self: this\n    }, \"Medicine\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495\n      },\n      __self: this\n    }, \"Dosage\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496\n      },\n      __self: this\n    }, \"Timings\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497\n      },\n      __self: this\n    }, \"Instructions\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501\n      },\n      __self: this\n    }, medicineTable)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      disabled: isDisabled,\n      value: \"Add prescription\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/test1/front-end/src/components/component-add-prescription.js"],"names":["React","Component","Multiselect","Table","axios","Validatephone","contact","phoneno","match","validate","prescription","length","AddPrescription","constructor","props","handleBlur","field","evt","setState","touched","state","name","nameList","checkName","doctor","doctorList","checkdoctor","showdoctor","showMedicine","medicine","dosage","timings","instructions","prescriptions","onChangecontact","bind","onChangename","onChangedoctor","onChangemedicine","onChangedosage","onChangeinstructions","handleSubmitAdd","onSelect","onRemove","onSubmit","e","target","value","selectedList","selectedItem","push","removedItem","i","splice","preventDefault","console","log","morning","afternoon","evening","noon","item","obj","post","then","res","data","alert","render","errors","isDisabled","Object","keys","some","x","shouldMarkError","hasError","shouldShow","createNameElement","user","promise1","Promise","resolve","reject","map","n","createDoctorElement","createMedicineElement","options","id","remove","param","createMedicineTable","index","nameElement","doctorElement","medicineElement","medicineTable"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,aAAT,CAAuBC,OAAvB,EACA;AACA;AACI,MAAIC,OAAO,GAAG,qBAAd;;AACA,MAAGD,OAAO,CAACE,KAAR,CAAcD,OAAd,CAAH,EACA;AACA,WAAO,KAAP;AACC,GAHD,MAKA;AACA,WAAO,IAAP;AACC;AACJ;;AAED,SAASE,QAAT,CAAkBH,OAAlB,EAA0BI,YAA1B,EAAwC;AACpC;AACA,SAAO;AACHA,IAAAA,YAAY,EAAEA,YAAY,CAACC,MAAb,IAAqB,CADhC;AAEJL,IAAAA,OAAO,EAAED,aAAa,CAACC,OAAD;AAFlB,GAAP;AAIH;;AAED,eAAe,MAAMM,eAAN,SAA8BX,SAA9B,CAAwC;AACnDY,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAiLnBC,UAjLmB,GAiLLC,KAAD,IAAYC,GAAD,IAAS;AAC7B,WAAKC,QAAL,CAAc;AACZC,QAAAA,OAAO,EAAE,EAAE,GAAG,KAAKC,KAAL,CAAWD,OAAhB;AAAyB,WAACH,KAAD,GAAS;AAAlC;AADG,OAAd;AAGD,KArLgB;;AAGf,SAAKI,KAAL,GAAa;AACTd,MAAAA,OAAO,EAAE,EADA;AAETe,MAAAA,IAAI,EAAC,EAFI;AAGTC,MAAAA,QAAQ,EAAC,EAHA;AAITC,MAAAA,SAAS,EAAC,IAJD;AAKTC,MAAAA,MAAM,EAAC,EALE;AAMTC,MAAAA,UAAU,EAAC,EANF;AAOTC,MAAAA,WAAW,EAAC,IAPH;AAQTC,MAAAA,UAAU,EAAC,KARF;AASTC,MAAAA,YAAY,EAAC,KATJ;AAUTC,MAAAA,QAAQ,EAAC,EAVA;AAWTC,MAAAA,MAAM,EAAC,EAXE;AAYTC,MAAAA,OAAO,EAAC,EAZC;AAaTC,MAAAA,YAAY,EAAC,EAbJ;AAcTC,MAAAA,aAAa,EAAG,EAdP;AAeTd,MAAAA,OAAO,EAAE;AACLb,QAAAA,OAAO,EAAE;AADJ;AAfA,KAAb;AAoBA,SAAK4B,eAAL,GAAuB,KAAKA,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKE,cAAL,GAAsB,KAAKA,cAAL,CAAoBF,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKG,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBH,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKI,cAAL,GAAsB,KAAKA,cAAL,CAAoBJ,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKK,oBAAL,GAA4B,KAAKA,oBAAL,CAA0BL,IAA1B,CAA+B,IAA/B,CAA5B;AACA,SAAKM,eAAL,GAAuB,KAAKA,eAAL,CAAqBN,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKO,QAAL,GAAgB,KAAKA,QAAL,CAAcP,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKQ,QAAL,GAAgB,KAAKA,QAAL,CAAcR,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKS,QAAL,GAAgB,KAAKA,QAAL,CAAcT,IAAd,CAAmB,IAAnB,CAAhB;AAEH;;AACDD,EAAAA,eAAe,CAACW,CAAD,EAAI;AACf,SAAK3B,QAAL,CAAc;AACVZ,MAAAA,OAAO,EAAEuC,CAAC,CAACC,MAAF,CAASC,KADR;AAEVzB,MAAAA,QAAQ,EAAC,EAFC;AAGVC,MAAAA,SAAS,EAAC;AAHA,KAAd;AAKH;;AAEDa,EAAAA,YAAY,CAACS,CAAD,EAAI;AACZ,SAAK3B,QAAL,CAAc;AACVG,MAAAA,IAAI,EAAEwB,CAAC,CAACC,MAAF,CAASC;AADL,KAAd;AAGH;;AAEDV,EAAAA,cAAc,CAACQ,CAAD,EAAI;AACd,SAAK3B,QAAL,CAAc;AACVM,MAAAA,MAAM,EAAEqB,CAAC,CAACC,MAAF,CAASC;AADP,KAAd;AAGH;;AAEDT,EAAAA,gBAAgB,CAACO,CAAD,EAAI;AAChB,SAAK3B,QAAL,CAAc;AACVW,MAAAA,QAAQ,EAAEgB,CAAC,CAACC,MAAF,CAASC;AADT,KAAd;AAGH;;AAEDR,EAAAA,cAAc,CAACM,CAAD,EAAI;AACd,SAAK3B,QAAL,CAAc;AACVY,MAAAA,MAAM,EAAEe,CAAC,CAACC,MAAF,CAASC;AADP,KAAd;AAGH;;AAEDP,EAAAA,oBAAoB,CAACK,CAAD,EAAI;AACpB,SAAK3B,QAAL,CAAc;AACVc,MAAAA,YAAY,EAAEa,CAAC,CAACC,MAAF,CAASC;AADb,KAAd;AAGH;;AAEDL,EAAAA,QAAQ,CAACM,YAAD,EAAeC,YAAf,EAA6B;AACjC,SAAK7B,KAAL,CAAWW,OAAX,CAAmBmB,IAAnB,CAAwBD,YAAY,CAAC5B,IAArC;AAEH;;AAEDsB,EAAAA,QAAQ,CAACK,YAAD,EAAeG,WAAf,EAA4B;AAChC,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKhC,KAAL,CAAWW,OAAX,CAAmBpB,MAAvC,EAA+CyC,CAAC,EAAhD,EAAmD;AAC/C,UAAK,KAAKhC,KAAL,CAAWW,OAAX,CAAmBqB,CAAnB,MAA0BD,WAAW,CAAC9B,IAA3C,EAAiD;AAC7C,aAAKD,KAAL,CAAWW,OAAX,CAAmBsB,MAAnB,CAA0BD,CAA1B,EAA6B,CAA7B;AACH;AACJ;AACJ;;AAEDX,EAAAA,eAAe,CAACI,CAAD,EAAG;AACdA,IAAAA,CAAC,CAACS,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKpC,KAAL,CAAWS,QAAvB,EAAgC,KAAKT,KAAL,CAAWU,MAA3C,EAAkD,KAAKV,KAAL,CAAWW,OAA7D,EAAqE,KAAKX,KAAL,CAAWY,YAAhF;AAEA,QAAIyB,OAAO,GAAG,KAAd;AACA,QAAIC,SAAS,GAAG,KAAhB;AACA,QAAIC,OAAO,GAAG,KAAd;;AAEA,SAAI,IAAIP,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,KAAKhC,KAAL,CAAWW,OAAX,CAAmBpB,MAAjC,EAAwCyC,CAAC,EAAzC,EACA;AACI,cAAQ,KAAKhC,KAAL,CAAWW,OAAX,CAAmBqB,CAAnB,CAAR;AAEI,aAAKK,OAAL;AACIA,UAAAA,OAAO,GAAG,IAAV;;AACJ,aAAKG,IAAL;AACIF,UAAAA,SAAS,GAAG,IAAZ;;AACJ,aAAKC,OAAL;AACIA,UAAAA,OAAO,GAAG,IAAV;AAPR;AASH;;AAED,UAAME,IAAI,GAAG;AACThC,MAAAA,QAAQ,EAAC,KAAKT,KAAL,CAAWS,QADX;AAETC,MAAAA,MAAM,EAAC,KAAKV,KAAL,CAAWU,MAFT;AAGT2B,MAAAA,OAAO,EAACA,OAHC;AAITC,MAAAA,SAAS,EAACA,SAJD;AAKTC,MAAAA,OAAO,EAACA,OALC;AAMT5B,MAAAA,OAAO,EAAC,KAAKX,KAAL,CAAWW,OANV;AAOTC,MAAAA,YAAY,EAAC,KAAKZ,KAAL,CAAWY;AAPf,KAAb;AASA,SAAKZ,KAAL,CAAWa,aAAX,CAAyBiB,IAAzB,CAA8BW,IAA9B;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKpC,KAAL,CAAWa,aAAvB;AAEA,SAAKf,QAAL,CAAc;AACVW,MAAAA,QAAQ,EAAC,EADC;AAEVC,MAAAA,MAAM,EAAC,EAFG;AAGVE,MAAAA,YAAY,EAAE;AAHJ,KAAd;AAOH;;AAEDY,EAAAA,QAAQ,CAACC,CAAD,EAAI;AACRA,IAAAA,CAAC,CAACS,cAAF;AAEA,UAAMQ,GAAG,GAAE;AACPxD,MAAAA,OAAO,EAAE,KAAKc,KAAL,CAAWd,OADb;AAEPe,MAAAA,IAAI,EAAC,KAAKD,KAAL,CAAWC,IAFT;AAGPG,MAAAA,MAAM,EAAC,KAAKJ,KAAL,CAAWI,MAHX;AAIPS,MAAAA,aAAa,EAAG,KAAKb,KAAL,CAAWa;AAJpB,KAAX;AAOAsB,IAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AAEA1D,IAAAA,KAAK,CAAC2D,IAAN,CAAW,uCAAX,EAAoDD,GAApD,EACKE,IADL,CACUC,GAAG,IAAI;AACTV,MAAAA,OAAO,CAACC,GAAR,CAAYS,GAAG,CAACC,IAAhB;;AACA,UAAGD,GAAG,CAACC,IAAJ,KAAW,SAAd,EACA;AACIC,QAAAA,KAAK,CAAC,gCAAD,CAAL;AACA,aAAKjD,QAAL,CAAc;AACVZ,UAAAA,OAAO,EAAE,EADC;AAEVe,UAAAA,IAAI,EAAC,EAFK;AAGVC,UAAAA,QAAQ,EAAC,EAHC;AAIVC,UAAAA,SAAS,EAAC,IAJA;AAKVC,UAAAA,MAAM,EAAC,EALG;AAMVC,UAAAA,UAAU,EAAC,EAND;AAOVC,UAAAA,WAAW,EAAC,IAPF;AAQVC,UAAAA,UAAU,EAAC,KARD;AASVC,UAAAA,YAAY,EAAC,KATH;AAUVC,UAAAA,QAAQ,EAAC,EAVC;AAWVC,UAAAA,MAAM,EAAC,EAXG;AAYVC,UAAAA,OAAO,EAAC,EAZE;AAaVC,UAAAA,YAAY,EAAC,EAbH;AAcVC,UAAAA,aAAa,EAAG,EAdN;AAeVd,UAAAA,OAAO,EAAE;AACLb,YAAAA,OAAO,EAAE;AADJ;AAfC,SAAd;AAoBH,OAvBD,MAyBA;AACI6D,QAAAA,KAAK,CAACF,GAAG,CAACC,IAAL,CAAL;AACH;AACJ,KA/BL;AAkCH;;AAUDE,EAAAA,MAAM,GAAG;AAEL,UAAMC,MAAM,GAAG5D,QAAQ,CAAC,KAAKW,KAAL,CAAWd,OAAZ,EAAoB,KAAKc,KAAL,CAAWa,aAA/B,CAAvB;AACA,UAAMqC,UAAU,GAAGC,MAAM,CAACC,IAAP,CAAYH,MAAZ,EAAoBI,IAApB,CAAyBC,CAAC,IAAIL,MAAM,CAACK,CAAD,CAApC,CAAnB;;AAGA,UAAMC,eAAe,GAAG3D,KAAK,IAAI;AAC7B,YAAM4D,QAAQ,GAAGP,MAAM,CAACrD,KAAD,CAAvB;AACA,YAAM6D,UAAU,GAAG,KAAKzD,KAAL,CAAWD,OAAX,CAAmBH,KAAnB,CAAnB;AACA,aAAO4D,QAAQ,GAAGC,UAAH,GAAgB,KAA/B;AACD,KAJH;;AAMA,UAAMC,iBAAiB,GAAG,MAAM;AAE5B,UAAG,CAACzE,aAAa,CAAC,KAAKe,KAAL,CAAWd,OAAZ,CAAjB,EACA;AAGA,cAAMyE,IAAI,GAAE;AACRzE,UAAAA,OAAO,EAAC,KAAKc,KAAL,CAAWd;AADX,SAAZ;;AAIA,YAAG,KAAKc,KAAL,CAAWG,SAAd,EACA;AAAC;AACG,gBAAMyD,QAAQ,GAAG,IAAIC,OAAJ,CAAY,UAASC,OAAT,EAAkBC,MAAlB,EAA0B;AAEnD/E,YAAAA,KAAK,CAAC2D,IAAN,CAAW,mCAAX,EAAgDgB,IAAhD,EACCf,IADD,CACMC,GAAG,IAAI;AACTiB,cAAAA,OAAO,CAACjB,GAAG,CAACC,IAAL,CAAP;AACH,aAHD;AAIH,WANgB,CAAjB;AAQAc,UAAAA,QAAQ,CAAChB,IAAT,CAAejB,KAAD,IAAU;AACpB,gBAAGA,KAAK,IAAE,OAAV,EACA,KAAK7B,QAAL,CAAc;AACVI,cAAAA,QAAQ,EAAEyB,KADA;AAEV1B,cAAAA,IAAI,EAAC0B,KAAK,CAAC,CAAD,CAFA;AAGVxB,cAAAA,SAAS,EAAC,KAHA;AAIVI,cAAAA,UAAU,EAAC,IAJD;AAKVC,cAAAA,YAAY,EAAC;AALH,aAAd;AAOH,WATD;AAWH;;AAEG,YAAG,KAAKR,KAAL,CAAWE,QAAX,CAAoBX,MAApB,GAA2B,CAA9B,EACA;AACI,iBACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADA,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGI;AAAQ,YAAA,KAAK,EAAE,KAAKS,KAAL,CAAWC,IAA1B;AAAgC,YAAA,QAAQ,EAAE,KAAKe,YAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACC,KAAKhB,KAAL,CAAWE,QAAX,CAAoB8D,GAApB,CAAyBC,CAAD,IAAO;AAAQ,YAAA,KAAK,EAAEA,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAmBA,CAAnB,CAA/B,CADD,CAHJ,CADR;AAUH,SAZD,MAcA;AACI,iBACA;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDADA;AAKH;AAEJ,OArDD,MAuDA;AACI,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAIH;AACJ,KA/DD;;AAiEA,UAAMC,mBAAmB,GAAG,MAAM;AAE9B,UAAG,KAAKlE,KAAL,CAAWO,UAAd,EACA;AAGI,YAAG,KAAKP,KAAL,CAAWM,WAAd,EACA;AAAC;AACG,gBAAMsD,QAAQ,GAAG,IAAIC,OAAJ,CAAY,UAASC,OAAT,EAAkBC,MAAlB,EAA0B;AAEnD/E,YAAAA,KAAK,CAAC2D,IAAN,CAAW,kCAAX,EACCC,IADD,CACMC,GAAG,IAAI;AACTiB,cAAAA,OAAO,CAACjB,GAAG,CAACC,IAAL,CAAP;AACH,aAHD;AAIH,WANgB,CAAjB;AAQAc,UAAAA,QAAQ,CAAChB,IAAT,CAAejB,KAAD,IAAU;AACpB,gBAAGA,KAAK,IAAE,OAAV,EACA,KAAK7B,QAAL,CAAc;AACVO,cAAAA,UAAU,EAAEsB,KADF;AAEVvB,cAAAA,MAAM,EAACuB,KAAK,CAAC,CAAD,CAFF;AAGVrB,cAAAA,WAAW,EAAC;AAHF,aAAd;AAKH,WAPD;AASH;;AAED,YAAG,KAAKN,KAAL,CAAWK,UAAX,CAAsBd,MAAtB,GAA6B,CAAhC,EACA;AACI,iBACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADA,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGI;AAAQ,YAAA,KAAK,EAAE,KAAKS,KAAL,CAAWI,MAA1B;AAAkC,YAAA,QAAQ,EAAE,KAAKa,cAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACC,KAAKjB,KAAL,CAAWK,UAAX,CAAsB2D,GAAtB,CAA2BC,CAAD,IAAO;AAAQ,YAAA,KAAK,EAAEA,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAmBA,CAAnB,CAAjC,CADD,CAHJ,CADR;AAUH,SAZD,MAcA;AACI,iBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAIH;AAEJ,OA9CD,MAgDA;AACI,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAIH;AACJ,KAxDD;;AA0DA,UAAME,qBAAqB,GAAG,MAAM;AAEhC,YAAMC,OAAO,GAAE,CAAC;AAACnE,QAAAA,IAAI,EAAE,UAAP;AAAmBoE,QAAAA,EAAE,EAAE;AAAvB,OAAD,EAA2B;AAACpE,QAAAA,IAAI,EAAE,OAAP;AAAgBoE,QAAAA,EAAE,EAAE;AAApB,OAA3B,EAAkD;AAACpE,QAAAA,IAAI,EAAE,UAAP;AAAmBoE,QAAAA,EAAE,EAAE;AAAvB,OAAlD,CAAf;;AAEA,UAAG,KAAKrE,KAAL,CAAWQ,YAAd,EACA;AACI,eAEI;AAAK,UAAA,SAAS,EAAC,YAAf;AAA4B,UAAA,QAAQ,EAAE,KAAKa,eAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAEI;AACA,UAAA,IAAI,EAAC,MADL;AAEA,UAAA,WAAW,EAAC,UAFZ;AAGA,UAAA,QAAQ,MAHR;AAIA,UAAA,SAAS,EAAE,cAJX;AAKA,UAAA,KAAK,EAAE,KAAKrB,KAAL,CAAWS,QALlB;AAMA,UAAA,QAAQ,EAAE,KAAKS,gBANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,EAYI;AACA,UAAA,IAAI,EAAC,MADL;AAEA,UAAA,WAAW,EAAC,QAFZ;AAGA,UAAA,QAAQ,MAHR;AAIA,UAAA,SAAS,EAAE,cAJX;AAKA,UAAA,KAAK,EAAE,KAAKlB,KAAL,CAAWU,MALlB;AAMA,UAAA,QAAQ,EAAE,KAAKS,cANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAZJ,EAqBI,oBAAC,WAAD;AACA,UAAA,OAAO,EAAEiD,OADT,CACkB;AADlB;AAEA,UAAA,YAAY,EAAC,MAFb,CAEoB;AAFpB;AAGA,UAAA,WAAW,EAAC,SAHZ;AAIA,UAAA,QAAQ,EAAE,KAAK9C,QAJf;AAKA,UAAA,QAAQ,EAAE,KAAKC,QALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UArBJ,EA6BI;AACA,UAAA,WAAW,EAAC,cADZ;AAEA,UAAA,SAAS,EAAE,cAFX;AAGA,UAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWY,YAHlB;AAIA,UAAA,QAAQ,EAAE,KAAKQ,oBAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UA7BJ,EAoCI;AACA,UAAA,IAAI,EAAC,QADL;AAEA,UAAA,KAAK,EAAG,KAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UApCJ,CAHA,CAFJ;AAoDH,OAtDD,MAyDA;AACI,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAIH;AAEJ,KApED;;AAsEA,UAAMkD,MAAM,GAAGC,KAAK,IAAG;AACnB,WAAK,IAAIvC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKhC,KAAL,CAAWa,aAAX,CAAyBtB,MAA7C,EAAqDyC,CAAC,EAAtD,EAAyD;AACrD,YAAK,KAAKhC,KAAL,CAAWa,aAAX,CAAyBmB,CAAzB,EAA4BvB,QAA5B,KAAyC8D,KAA9C,EAAqD;AACjD,eAAKvE,KAAL,CAAWa,aAAX,CAAyBoB,MAAzB,CAAgCD,CAAhC,EAAmC,CAAnC;AACH;AACJ;AACJ,KAND;;AAQA,UAAMwC,mBAAmB,GAAG,MAAK;AAC7B,aAAO,KAAKxE,KAAL,CAAWa,aAAX,CAAyBmD,GAAzB,CAA6B,CAACvB,IAAD,EAAOgC,KAAP,KAAiB;AAClD,cAAM;AAAEhE,UAAAA,QAAF;AAAYC,UAAAA,MAAZ;AAAoBC,UAAAA,OAApB;AAA6BC,UAAAA;AAA7B,YAA8C6B,IAApD;AACA,eAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAMgC,KAAN,CADH,EAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAMhE,QAAN,CAFH,EAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAMC,MAAN,CAHH,EAIG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAMC,OAAN,CAJH,EAKG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAMC,YAAN,CALH,EAMG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG;AAAG,UAAA,IAAI,EAAC,GAAR;AAAY,UAAA,OAAO,EAAE,MAAM0D,MAAM,CAAC7D,QAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADH,CANH,CAFH;AAaF,OAfM,CAAP;AAgBF,KAjBF;;AAmBA,UAAMiE,WAAW,GAAGhB,iBAAiB,CAAC,KAAK1D,KAAL,CAAWd,OAAZ,CAArC;AACA,UAAMyF,aAAa,GAAGT,mBAAmB,EAAzC;AACA,UAAMU,eAAe,GAAGT,qBAAqB,EAA7C;AACA,UAAMU,aAAa,GAAGL,mBAAmB,EAAzC;AAEA,WACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAM,MAAA,QAAQ,EAAE,KAAKhD,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADA,EAEA;AACQ,MAAA,IAAI,EAAC,MADb;AAEQ,MAAA,SAAS,EAAE+B,eAAe,CAAC,SAAD,CAAf,GAA6B,yBAA7B,GAAyD,cAF5E;AAGQ,MAAA,KAAK,EAAE,KAAKvD,KAAL,CAAWd,OAH1B;AAIQ,MAAA,QAAQ,EAAE,KAAK4B,eAJvB;AAKQ,MAAA,MAAM,EAAE,KAAKnB,UAAL,CAAgB,SAAhB,CALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,EASS4D,eAAe,CAAC,SAAD,CAAf,GACG;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DADH,GAIA,EAbT,CADJ,EAmBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCmB,WADD,CAnBA,EAuBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBA,EAyBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCC,aADD,CAzBA,EA8BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCC,eADD,CA9BA,EAmCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAnCJ,EAqCI,oBAAC,KAAD;AAAO,MAAA,OAAO,MAAd;AAAe,MAAA,QAAQ,MAAvB;AAAwB,MAAA,KAAK,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHA,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJA,EAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALA,CADJ,CADA,EAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKC,aADL,CAXA,CArCJ,EAqDI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,QAAQ,EAAE3B,UAA/B;AAA2C,MAAA,KAAK,EAAC,kBAAjD;AAAoE,MAAA,SAAS,EAAC,iBAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CArDJ,CAFJ,CADJ;AAkEH;;AAxekD","sourcesContent":["import React, { Component } from 'react';\r\nimport { Multiselect } from 'multiselect-react-dropdown';\r\nimport Table from 'react-bootstrap/Table'\r\nimport axios from 'axios';\r\n\r\nfunction Validatephone(contact) \r\n{\r\n//    var mailformat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n    var phoneno = /^\\+?([0-9]{12})\\)?$/;\r\n    if(contact.match(phoneno))\r\n    {\r\n    return false;\r\n    }\r\n    else\r\n    {\r\n    return true;\r\n    }\r\n}\r\n\r\nfunction validate(contact,prescription) {\r\n    // true means invalid, so our conditions got reversed\r\n    return {\r\n        prescription: prescription.length==0,\r\n       contact: Validatephone(contact),\r\n    };\r\n}\r\n\r\nexport default class AddPrescription extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            contact: '',\r\n            name:'',\r\n            nameList:[],\r\n            checkName:true,\r\n            doctor:'',\r\n            doctorList:[],\r\n            checkdoctor:true,\r\n            showdoctor:false,\r\n            showMedicine:false,\r\n            medicine:'',\r\n            dosage:'',\r\n            timings:[],\r\n            instructions:'',\r\n            prescriptions : [],\r\n            touched: {\r\n                contact: false,\r\n              }\r\n            \r\n        }\r\n        this.onChangecontact = this.onChangecontact.bind(this);\r\n        this.onChangename = this.onChangename.bind(this);\r\n        this.onChangedoctor = this.onChangedoctor.bind(this);\r\n        this.onChangemedicine = this.onChangemedicine.bind(this);\r\n        this.onChangedosage = this.onChangedosage.bind(this);\r\n        this.onChangeinstructions = this.onChangeinstructions.bind(this);\r\n        this.handleSubmitAdd = this.handleSubmitAdd.bind(this);\r\n        this.onSelect = this.onSelect.bind(this);\r\n        this.onRemove = this.onRemove.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n     \r\n    }\r\n    onChangecontact(e) {\r\n        this.setState({\r\n            contact: e.target.value,\r\n            nameList:[],\r\n            checkName:true\r\n        });\r\n    }\r\n\r\n    onChangename(e) {\r\n        this.setState({\r\n            name: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangedoctor(e) {\r\n        this.setState({\r\n            doctor: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangemedicine(e) {\r\n        this.setState({\r\n            medicine: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangedosage(e) {\r\n        this.setState({\r\n            dosage: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeinstructions(e) {\r\n        this.setState({\r\n            instructions: e.target.value\r\n        });\r\n    }\r\n\r\n    onSelect(selectedList, selectedItem) {\r\n        this.state.timings.push(selectedItem.name);\r\n      \r\n    }\r\n\r\n    onRemove(selectedList, removedItem) {\r\n        for( var i = 0; i < this.state.timings.length; i++){ \r\n            if ( this.state.timings[i] === removedItem.name) { \r\n                this.state.timings.splice(i, 1); \r\n            }\r\n        }\r\n    }\r\n\r\n    handleSubmitAdd(e){\r\n        e.preventDefault();\r\n        console.log(this.state.medicine,this.state.dosage,this.state.timings,this.state.instructions);\r\n        \r\n        var morning = false;\r\n        var afternoon = false;\r\n        var evening = false;\r\n\r\n        for(var i=0;i<this.state.timings.length;i++)\r\n        {   \r\n            switch (this.state.timings[i])\r\n            {\r\n                case morning:\r\n                    morning = true;\r\n                case noon:\r\n                    afternoon = true;\r\n                case evening:\r\n                    evening = true;\r\n            }\r\n        }\r\n\r\n        const item = {\r\n            medicine:this.state.medicine,\r\n            dosage:this.state.dosage,\r\n            morning:morning,\r\n            afternoon:afternoon,\r\n            evening:evening,\r\n            timings:this.state.timings,\r\n            instructions:this.state.instructions\r\n        }\r\n        this.state.prescriptions.push(item);\r\n        console.log(this.state.prescriptions);\r\n\r\n        this.setState({\r\n            medicine:'',\r\n            dosage:'',\r\n            instructions: '',\r\n            \r\n        });\r\n\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        \r\n        const obj= {\r\n            contact: this.state.contact,\r\n            name:this.state.name,\r\n            doctor:this.state.doctor,\r\n            prescriptions : this.state.prescriptions\r\n        }\r\n\r\n        console.log(obj)\r\n        \r\n        axios.post('http://localhost:4000/addPrescription', obj)\r\n            .then(res => {\r\n                console.log(res.data);\r\n                if(res.data===\"success\")\r\n                {\r\n                    alert(\"prescription added Successfuly\");\r\n                    this.setState({\r\n                        contact: '',\r\n                        name:'',\r\n                        nameList:[],\r\n                        checkName:true,\r\n                        doctor:'',\r\n                        doctorList:[],\r\n                        checkdoctor:true,\r\n                        showdoctor:false,\r\n                        showMedicine:false,\r\n                        medicine:'',\r\n                        dosage:'',\r\n                        timings:[],\r\n                        instructions:'',\r\n                        prescriptions : [],\r\n                        touched: {\r\n                            contact: false,\r\n                        }\r\n            \r\n                    });\r\n                }\r\n                else\r\n                {\r\n                    alert(res.data);\r\n                }\r\n            });\r\n\r\n\r\n    }\r\n\r\n     \r\n    handleBlur = (field) => (evt) => {\r\n        this.setState({\r\n          touched: { ...this.state.touched, [field]: true },\r\n        });\r\n      } \r\n\r\n\r\n    render() {\r\n\r\n        const errors = validate(this.state.contact,this.state.prescriptions);\r\n        const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n\r\n        \r\n        const shouldMarkError = field => {\r\n            const hasError = errors[field];\r\n            const shouldShow = this.state.touched[field];      \r\n            return hasError ? shouldShow : false;\r\n          };\r\n    \r\n        const createNameElement = () => {\r\n\r\n            if(!Validatephone(this.state.contact))\r\n            {\r\n            \r\n\r\n            const user= {\r\n                contact:this.state.contact,\r\n            }\r\n\r\n            if(this.state.checkName)\r\n            {// to stop useless api calls\r\n                const promise1 = new Promise(function(resolve, reject) {\r\n                    \r\n                    axios.post('http://localhost:4000/getpatients', user)\r\n                    .then(res => {\r\n                        resolve(res.data)\r\n                    });\r\n                });\r\n                \r\n                promise1.then((value) =>{\r\n                    if(value!=\"empty\")\r\n                    this.setState({\r\n                        nameList: value,\r\n                        name:value[0],\r\n                        checkName:false,\r\n                        showdoctor:true,\r\n                        showMedicine:true\r\n                    });\r\n                });\r\n                \r\n            }\r\n\r\n                if(this.state.nameList.length>0)\r\n                {\r\n                    return (\r\n                            <div>\r\n                            <label >Select Patient:</label>\r\n                                <br></br>\r\n                                <select value={this.state.name} onChange={this.onChangename}>\r\n                                {this.state.nameList.map((n) => <option value={n}>{n}</option>)}\r\n                                </select>\r\n                                \r\n                            </div>\r\n                            );            \r\n                }\r\n                else\r\n                {\r\n                    return(\r\n                    <div className=\"invalid-feedback\">\r\n                            No patient exists with this contact.\r\n                    </div>\r\n                    );\r\n                }  \r\n\r\n            }\r\n            else\r\n            {\r\n                return (\r\n                    <div>\r\n                    </div>\r\n                    );\r\n            }\r\n        }          \r\n         \r\n        const createDoctorElement = () => {\r\n\r\n            if(this.state.showdoctor)\r\n            {\r\n            \r\n\r\n                if(this.state.checkdoctor)\r\n                {// to stop useless api calls\r\n                    const promise1 = new Promise(function(resolve, reject) {\r\n                        \r\n                        axios.post('http://localhost:4000/getdoctors')\r\n                        .then(res => {\r\n                            resolve(res.data)\r\n                        });\r\n                    });\r\n                    \r\n                    promise1.then((value) =>{\r\n                        if(value!=\"empty\")\r\n                        this.setState({\r\n                            doctorList: value,\r\n                            doctor:value[0],\r\n                            checkdoctor:false\r\n                        });\r\n                    });\r\n                    \r\n                }\r\n\r\n                if(this.state.doctorList.length>0)\r\n                {\r\n                    return (\r\n                            <div>\r\n                            <label >Select Reference Doctor:</label>\r\n                                <br></br>\r\n                                <select value={this.state.doctor} onChange={this.onChangedoctor}>\r\n                                {this.state.doctorList.map((n) => <option value={n}>{n}</option>)}\r\n                                </select>\r\n                                \r\n                            </div>\r\n                            );            \r\n                }\r\n                else\r\n                {\r\n                    return(\r\n                    <div>\r\n                    </div>\r\n                    );\r\n                }  \r\n\r\n            }\r\n            else\r\n            {\r\n                return (\r\n                    <div>\r\n                    </div>\r\n                    );\r\n            }\r\n        }\r\n\r\n        const createMedicineElement = () => {\r\n\r\n            const options= [{name: 'morning ', id: 1},{name: 'noon ', id: 2},{name: 'evening ', id: 3}]\r\n\r\n            if(this.state.showMedicine)\r\n            {\r\n                return (\r\n                    \r\n                    <div className=\"form-group\" onSubmit={this.handleSubmitAdd}>\r\n                    <h3>Add Medicine</h3>\r\n\r\n                    <form>\r\n                        <br></br>\r\n                        <input \r\n                        type=\"text\"\r\n                        placeholder=\"Medicine\"\r\n                        required\r\n                        className={\"form-control\"}\r\n                        value={this.state.medicine}\r\n                        onChange={this.onChangemedicine}\r\n                        />\r\n\r\n\r\n                        <input \r\n                        type=\"text\"\r\n                        placeholder=\"Dosage\"\r\n                        required \r\n                        className={\"form-control\"}\r\n                        value={this.state.dosage}\r\n                        onChange={this.onChangedosage}\r\n                        />\r\n\r\n                        <Multiselect\r\n                        options={options} // Options to display in the dropdown\r\n                        displayValue=\"name\" // Property name to display in the dropdown options\r\n                        placeholder=\"timings\"\r\n                        onSelect={this.onSelect}\r\n                        onRemove={this.onRemove}\r\n                        />\r\n\r\n                        <textarea\r\n                        placeholder=\"Instructions\" \r\n                        className={\"form-control\"}\r\n                        value={this.state.instructions}\r\n                        onChange={this.onChangeinstructions}\r\n                        />\r\n\r\n                        <input \r\n                        type=\"submit\"\r\n                        value = \"Add\"\r\n                        />\r\n\r\n                        </form>\r\n\r\n\r\n\r\n                    </div>\r\n                    );\r\n            }\r\n\r\n            else\r\n            {\r\n                return(\r\n                    <div>\r\n                    </div>\r\n                );\r\n            }\r\n        \r\n        }\r\n\r\n        const remove = param =>{\r\n            for( var i = 0; i < this.state.prescriptions.length; i++){ \r\n                if ( this.state.prescriptions[i].medicine === param) { \r\n                    this.state.prescriptions.splice(i, 1); \r\n                }\r\n            }   \r\n        }\r\n\r\n        const createMedicineTable = ()=> {\r\n            return this.state.prescriptions.map((item, index) => {\r\n               const { medicine, dosage, timings, instructions } = item \r\n               return (\r\n\r\n                  <tr>\r\n                     <td >{index}</td>\r\n                     <td >{medicine}</td>\r\n                     <td >{dosage}</td>\r\n                     <td >{timings}</td>\r\n                     <td >{instructions}</td>\r\n                     <div>\r\n                        <a href=\"#\" onClick={() => remove(medicine)}>x</a>\r\n                    </div>\r\n                  </tr>\r\n               )\r\n            })\r\n         }\r\n\r\n        const nameElement = createNameElement(this.state.contact);\r\n        const doctorElement = createDoctorElement();\r\n        const medicineElement = createMedicineElement();\r\n        const medicineTable = createMedicineTable();\r\n\r\n        return (\r\n            <div className=\"form-group\">\r\n                \r\n                <form onSubmit={this.onSubmit}>\r\n                    <div>\r\n                    <label>Contact: </label>\r\n                    <input \r\n                            type=\"text\" \r\n                            className={shouldMarkError(\"contact\") ? \"form-control is-invalid\" : \"form-control\"}\r\n                            value={this.state.contact}\r\n                            onChange={this.onChangecontact}\r\n                            onBlur={this.handleBlur(\"contact\")}\r\n                            />\r\n                            {shouldMarkError(\"contact\") ?\r\n                                <div className=\"invalid-feedback\">\r\n                                    Please provide a valid contact like +921112223456.\r\n                                </div>\r\n                            :\"\"}\r\n\r\n                    </div>\r\n\r\n\r\n                <div>\r\n                {nameElement}\r\n                </div>\r\n                \r\n                <br></br>\r\n\r\n                <div>\r\n                {doctorElement}\r\n                </div>\r\n\r\n\r\n                <div>\r\n                {medicineElement}\r\n                </div>\r\n\r\n\r\n                    <h3>Medicine List</h3>\r\n                    \r\n                    <Table striped bordered hover>\r\n                    <thead>\r\n                        <tr>\r\n                        <th>#</th>\r\n                        <th>Medicine</th>\r\n                        <th>Dosage</th>\r\n                        <th>Timings</th>\r\n                        <th>Instructions</th>\r\n                        </tr>\r\n\r\n                    </thead>\r\n                    <tbody>\r\n                        {medicineTable}\r\n                    </tbody>\r\n                    </Table>\r\n\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" disabled={isDisabled} value=\"Add prescription\" className=\"btn btn-primary\" />\r\n                    </div>\r\n\r\n                    </form>\r\n\r\n\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}