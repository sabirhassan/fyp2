{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\test1\\\\front-end\\\\src\\\\components\\\\component-medicines.js\";\nimport React, { Component } from 'react';\nimport { Datatable } from \"@o2xp/react-datatable\";\nimport axios from 'axios';\nimport AddIcon from '@material-ui/icons/Add';\n\nclass PopUp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = () => {\n      this.props.toggle();\n    };\n\n    this.state = {\n      name: ''\n    };\n    this.onChangename = this.onChangename.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onChangename(e) {\n    this.setState({\n      name: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    console.log(`Form submitted:`);\n    console.log(`name: ${this.state.name}`);\n    const user = {\n      name: this.state.name\n    };\n    console.log(user);\n    this.props.func(user);\n    this.setState({\n      name: ''\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal_content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"close\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"\\xD7\"), React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Register!\"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Name:\", React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: this.state.name,\n      onChange: this.onChangename,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nlet data = [];\nlet options = {\n  title: \"My super datatable\",\n  dimensions: {\n    datatable: {\n      width: \"90%\",\n      height: \"40%\"\n    },\n    row: {\n      height: \"48px\"\n    }\n  },\n  keyColumn: \"id\",\n  font: \"Arial\",\n  data: {\n    columns: [{\n      id: \"id\",\n      label: \"id\",\n      colSize: \"150px\",\n      editable: false\n    }, {\n      id: \"Drug Name\",\n      label: \"Name\",\n      colSize: \"100px\",\n      editable: true,\n      dataType: \"text\",\n      inputType: \"input\"\n    }, {\n      id: \"Form\",\n      label: \"Form\",\n      colSize: \"100px\",\n      editable: true,\n      dataType: \"text\",\n      inputType: \"input\"\n    }, {\n      id: \"Strength\",\n      label: \"Strength\",\n      colSize: \"100px\",\n      editable: true,\n      dataType: \"text\",\n      inputType: \"input\"\n    }, {\n      id: \"Active Ingredient\",\n      label: \"Active Ingredient\",\n      colSize: \"100px\",\n      editable: true,\n      dataType: \"text\",\n      inputType: \"input\"\n    }],\n    rows: []\n  },\n  features: {\n    canEdit: true,\n    canDelete: true,\n    canSearch: true,\n    canOrderColumns: true,\n    canSelectRow: true,\n    rowsPerPage: {\n      available: [10, 25, 50, 100],\n      selected: 50\n    }\n  }\n};\nvar count = 0;\nexport default class medicineList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.togglePop = () => {\n      this.setState({\n        seen: !this.state.seen\n      });\n    };\n\n    this.actionsRow = ({\n      type,\n      payload\n    }) => {\n      console.log(type);\n      console.log(payload);\n    };\n\n    this.updateoptions = () => {\n      console.log(count++);\n      const promise1 = new Promise(function (resolve, reject) {\n        axios.post('http://localhost:4000/getMedicines').then(res => {\n          resolve(res.data);\n        });\n      });\n      promise1.then(value => {\n        if (value != \"empty\") this.setState({\n          data: value,\n          gotData: true\n        });\n      });\n      options = {\n        title: \"My super datatable\",\n        dimensions: {\n          datatable: {\n            width: \"90%\",\n            height: \"40%\"\n          },\n          row: {\n            height: \"48px\"\n          }\n        },\n        keyColumn: \"id\",\n        font: \"Arial\",\n        data: {\n          columns: [{\n            id: \"id\",\n            label: \"id\",\n            colSize: \"150px\",\n            editable: false\n          }, {\n            id: \"Drug Name\",\n            label: \"Name\",\n            colSize: \"100px\",\n            editable: true,\n            dataType: \"text\",\n            inputType: \"input\"\n          }, {\n            id: \"Form\",\n            label: \"Form\",\n            colSize: \"100px\",\n            editable: true,\n            dataType: \"text\",\n            inputType: \"input\"\n          }, {\n            id: \"Strength\",\n            label: \"Strength\",\n            colSize: \"100px\",\n            editable: true,\n            dataType: \"text\",\n            inputType: \"input\"\n          }, {\n            id: \"Active Ingredient\",\n            label: \"Active Ingredient\",\n            colSize: \"100px\",\n            editable: true,\n            dataType: \"text\",\n            inputType: \"input\"\n          }],\n          rows: this.state.data\n        },\n        features: {\n          canEdit: true,\n          canDelete: true,\n          canSearch: true,\n          canOrderColumns: true,\n          canSelectRow: true,\n          rowsPerPage: {\n            available: [10, 25, 50, 100],\n            selected: 50\n          },\n          additionalIcons: [{\n            title: \"Add Medicine\",\n            icon: React.createElement(AddIcon, {\n              color: \"primary\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 277\n              },\n              __self: this\n            }),\n            onClick: () => {\n              this.togglePop();\n            }\n          }]\n        }\n      };\n    };\n\n    this.state = {\n      gotData: false,\n      options: {},\n      data: [],\n      name: '',\n      seen: false\n    };\n    this.onSubmitModal = this.onSubmitModal.bind(this);\n  }\n\n  onSubmitModal(evt) {\n    console.log(evt);\n    this.setState({\n      name: evt.name,\n      seen: false\n    });\n  }\n\n  render() {\n    const createTableElement = () => {\n      this.updateoptions();\n      return React.createElement(\"div\", {\n        style: {\n          marginTop: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, \"Medicine List\"), React.createElement(Datatable, {\n        options: options,\n        actions: this.actionsRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }));\n    };\n\n    const Table = createTableElement();\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, this.state.seen ? React.createElement(PopUp, {\n      toggle: this.togglePop,\n      func: this.onSubmitModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }) : null, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, Table));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/test1/front-end/src/components/component-medicines.js"],"names":["React","Component","Datatable","axios","AddIcon","PopUp","constructor","props","handleClick","toggle","state","name","onChangename","bind","onSubmit","e","setState","target","value","preventDefault","console","log","user","func","render","data","options","title","dimensions","datatable","width","height","row","keyColumn","font","columns","id","label","colSize","editable","dataType","inputType","rows","features","canEdit","canDelete","canSearch","canOrderColumns","canSelectRow","rowsPerPage","available","selected","count","medicineList","togglePop","seen","actionsRow","type","payload","updateoptions","promise1","Promise","resolve","reject","post","then","res","gotData","additionalIcons","icon","onClick","onSubmitModal","evt","createTableElement","marginTop","Table"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport {Datatable} from \"@o2xp/react-datatable\";\r\nimport axios from 'axios';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nclass PopUp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name:''\r\n    }\r\n    this.onChangename = this.onChangename.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  onChangename(e) {\r\n    this.setState({\r\n        name: e.target.value\r\n    });\r\n  \r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n  \r\n  \r\n    console.log(`Form submitted:`);\r\n    console.log(`name: ${this.state.name}`);\r\n    const user= {\r\n        name:this.state.name,\r\n    }\r\n    console.log(user)\r\n    \r\n    this.props.func(user)\r\n\r\n    this.setState({\r\n        name: '',\r\n    });\r\n  }\r\n\r\n  handleClick = () => {\r\n    this.props.toggle();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"modal\">\r\n        <div className=\"modal_content\">\r\n          <span className=\"close\" onClick={this.handleClick}>\r\n            &times;\r\n          </span>\r\n          <form onSubmit={this.onSubmit}>\r\n            <h3>Register!</h3>\r\n            <label>\r\n              Name:\r\n              <input \r\n              type=\"text\" \r\n              className=\"form-control\"\r\n              value={this.state.name}\r\n              onChange={this.onChangename}\r\n              />\r\n\r\n            </label>\r\n            <br />\r\n            <input type=\"submit\" />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nlet data = []\r\nlet options = {\r\n    title: \"My super datatable\",\r\n    dimensions: {\r\n      datatable: {\r\n        width: \"90%\",\r\n        height: \"40%\"\r\n      },\r\n      row: {\r\n        height: \"48px\"\r\n      }\r\n    },\r\n    keyColumn: \"id\",\r\n    font: \"Arial\",\r\n    data: {\r\n      columns: [\r\n        {\r\n            id: \"id\",\r\n            label: \"id\",\r\n            colSize: \"150px\",\r\n            editable: false\r\n        },\r\n        {\r\n            id: \"Drug Name\",\r\n            label: \"Name\",\r\n            colSize: \"100px\",\r\n            editable: true,\r\n            dataType: \"text\",\r\n            inputType: \"input\"\r\n        },\r\n        {\r\n            id: \"Form\",\r\n            label: \"Form\",\r\n            colSize: \"100px\",\r\n            editable: true,\r\n            dataType: \"text\",\r\n            inputType: \"input\"\r\n        },\r\n        {\r\n            id: \"Strength\",\r\n            label: \"Strength\",\r\n            colSize: \"100px\",\r\n            editable: true,\r\n            dataType: \"text\",\r\n            inputType: \"input\"\r\n        },\r\n        {\r\n            id: \"Active Ingredient\",\r\n            label: \"Active Ingredient\",\r\n            colSize: \"100px\",\r\n            editable: true,\r\n            dataType: \"text\",\r\n            inputType: \"input\"\r\n        },\r\n      \r\n        ],\r\n\r\n      rows: []\r\n    },\r\n    features: {\r\n      canEdit: true,\r\n      canDelete: true,\r\n      canSearch: true,\r\n      canOrderColumns: true,\r\n      canSelectRow: true,\r\n      rowsPerPage: {\r\n        available: [10, 25, 50, 100],\r\n        selected: 50\r\n      },\r\n    }\r\n  };\r\n\r\nvar count = 0\r\n\r\nexport default class medicineList extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            gotData:false,\r\n            options:{},\r\n            data:[],\r\n            name:'',\r\n            seen: false,     \r\n        }\r\n        this.onSubmitModal = this.onSubmitModal.bind(this)\r\n        \r\n    }\r\n    \r\n    onSubmitModal(evt) {\r\n      console.log(evt)\r\n      this.setState({\r\n        name:evt.name,\r\n        seen: false\r\n      });\r\n    }\r\n  \r\n    togglePop = () => {\r\n      this.setState({\r\n        seen: !this.state.seen\r\n      });\r\n    };\r\n\r\n    actionsRow = ({ type, payload }) => {\r\n        console.log(type);\r\n        console.log(payload);\r\n    };\r\n    \r\n\r\n    updateoptions = ()=>\r\n    {\r\n      console.log(count++)\r\n\r\n      const promise1 = new Promise(function(resolve, reject) {\r\n                    \r\n      axios.post('http://localhost:4000/getMedicines',)\r\n      .then(res => {\r\n          resolve(res.data)\r\n        });\r\n      });\r\n    \r\n      promise1.then((value) =>{\r\n          if(value!=\"empty\")\r\n          this.setState({\r\n              data: value,\r\n              gotData:true\r\n          });\r\n      });\r\n\r\n\r\n      options = {\r\n        title: \"My super datatable\",\r\n        dimensions: {\r\n          datatable: {\r\n            width: \"90%\",\r\n            height: \"40%\"\r\n          },\r\n          row: {\r\n            height: \"48px\"\r\n          }\r\n        },\r\n        keyColumn: \"id\",\r\n        font: \"Arial\",\r\n        data: {\r\n          columns: [\r\n            {\r\n                id: \"id\",\r\n                label: \"id\",\r\n                colSize: \"150px\",\r\n                editable: false\r\n            },\r\n            {\r\n                id: \"Drug Name\",\r\n                label: \"Name\",\r\n                colSize: \"100px\",\r\n                editable: true,\r\n                dataType: \"text\",\r\n                inputType: \"input\"\r\n            },\r\n            {\r\n                id: \"Form\",\r\n                label: \"Form\",\r\n                colSize: \"100px\",\r\n                editable: true,\r\n                dataType: \"text\",\r\n                inputType: \"input\"\r\n            },\r\n            {\r\n                id: \"Strength\",\r\n                label: \"Strength\",\r\n                colSize: \"100px\",\r\n                editable: true,\r\n                dataType: \"text\",\r\n                inputType: \"input\"\r\n            },\r\n            {\r\n                id: \"Active Ingredient\",\r\n                label: \"Active Ingredient\",\r\n                colSize: \"100px\",\r\n                editable: true,\r\n                dataType: \"text\",\r\n                inputType: \"input\"\r\n            },\r\n          \r\n            ],\r\n\r\n          rows: this.state.data\r\n        },\r\n        features: {\r\n          canEdit: true,\r\n          canDelete: true,\r\n          canSearch: true,\r\n          canOrderColumns: true,\r\n          canSelectRow: true,\r\n          rowsPerPage: {\r\n            available: [10, 25, 50, 100],\r\n            selected: 50\r\n          },\r\n          additionalIcons: [\r\n            {\r\n              title: \"Add Medicine\",\r\n              icon: <AddIcon color=\"primary\" />,\r\n              onClick: () => {this.togglePop()}\r\n            }\r\n          ]\r\n        }\r\n      };\r\n    }\r\n\r\n    render() {\r\n\r\n        const createTableElement = () => {\r\n\r\n                this.updateoptions()\r\n                return(\r\n                <div style={{marginTop: 10}}>\r\n                <h3>Medicine List</h3>\r\n                <Datatable\r\n                options={options}\r\n                actions={this.actionsRow}\r\n                />\r\n\r\n                </div>\r\n                )\r\n        }\r\n\r\n        const Table = createTableElement();\r\n\r\n\r\n        return (\r\n\r\n            <div>\r\n            {this.state.seen ? <PopUp toggle={this.togglePop} func={this.onSubmitModal} /> : null}\r\n            <div>\r\n              {Table}\r\n            </div>\r\n        \r\n\r\n        \r\n            </div>\r\n\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}